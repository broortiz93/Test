<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Must Read Free Kubernetes Books</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/c6wje5Dlmlg/must-read-free-kubernetes-books.html" /><category term="Cloud Native" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-must_read_free_kubernetes_books</id><updated>2020-09-11T15:24:24Z</updated><published>2020-09-11T09:48:00Z</published><content type="html">&lt;p&gt;&lt;span data-preserver-spaces="true" style="background: transparent none repeat scroll 0% 0%; color: #0e101a; margin-bottom: 0pt; margin-top: 0pt;"&gt;There is a rise in offerings of free educational content, free software, free cloud resources with the single goal of capturing the new kingmaker's attention. While this is a change for good, I&amp;nbsp;&lt;/span&gt;&lt;a class="editor-rtfLink" href="https://www.blogger.com/#" style="background: transparent none repeat scroll 0% 0%; color: #4a6ee0; margin-bottom: 0pt; margin-top: 0pt;" target="_blank"&gt;&lt;span data-preserver-spaces="true" style="background: transparent none repeat scroll 0% 0%; color: #4a6ee0; margin-bottom: 0pt; margin-top: 0pt;"&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span data-preserver-spaces="true" style="background: transparent none repeat scroll 0% 0%; color: #0e101a; margin-bottom: 0pt; margin-top: 0pt;"&gt;&amp;nbsp;that is not going to be enough and this trend will only increase in the future. In a similar spirit, here I want to quickly share my favorite Kubernetes related books offered free of charge. I've read and found them all very useful at different stages of my learning. The list contains books that are sponsored and offered free of charge but in most cases that is for exchange of your contact details. If you prefer not to give your details, you can always go to Amazon, buy the data-capture-free book, and support the authors at the same time. I believe it is a privilege to work in this industry and I'm thankful for these authors and companies offering the choice of free-of-charge books.&amp;nbsp; So, don’t come back here saying “Hey, this is not free…why are you saying it is free... blah-blah". Here are my picks... happy reading.&lt;/span&gt;&lt;/p&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/kubernetes-patterns/" target="_blank"&gt;Kubernetes Patterns&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/resources/designing-distributed-systems/en-us/" target="_blank"&gt;Designing Distributed Systems&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/kubernetes-operators" target="_blank"&gt;Kubernetes Operators&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://k8s.vmware.com/kubernetes-up-and-running/" target="_blank"&gt;Kubernetes Up and Running&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.nginx.com/resources/library/monolith-to-microservices" target="_blank"&gt;Monolith to Microservices&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/knative-cookbook" target="_blank"&gt;Knative Cookbook &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.starburstdata.com/oreilly-presto-guide-download/" target="_blank"&gt;Presto: The Definitive Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Wzour3Gt98U/X0kbn4ethJI/AAAAAAAAOlg/jABqtvp3-X8iTacpjZFl2s5K8xBjUpTxwCLcBGAsYHQ/s1656/Blank%2BDiagram%2B-%2BPage%2B7.png" style="margin-left: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="Must Read Free Kubernetes Books" border="0" data-original-height="1472" data-original-width="1656" height="356" src="https://1.bp.blogspot.com/-Wzour3Gt98U/X0kbn4ethJI/AAAAAAAAOlg/jABqtvp3-X8iTacpjZFl2s5K8xBjUpTxwCLcBGAsYHQ/w400-h356/Blank%2BDiagram%2B-%2BPage%2B7.png" title="Must Read Free Kubernetes Books" width="400" /&gt;&lt;/a&gt; &lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;i&gt;Must Read Free Kubernetes Books&lt;/i&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;There are also other honorable mentions, but these are shorter editions (less than 100 pages) and for me these qualify as books written for marketing purpose in mind. Yet I found these books very useful and a great value for money ;)&lt;br /&gt;&lt;/p&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://www.nginx.com/resources/library/cloud-native-devops-with-kubernetes/" target="_blank"&gt;Cloud Native DevOps With Kubernetes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.nginx.com/resources/library/the-enterprise-path-to-service-mesh-architectures/" target="_blank"&gt;The Enterprise Path to Service Mesh Architectures&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.confluent.io/designing-event-driven-systems/" target="_blank"&gt;Designing Event-Driven Systems&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.redhat.com/books/migrating-microservice-databases-relational-monolith-distributed-data" target="_blank"&gt;Migrating Microservice Databases &lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://go2.striim.com/oreilly-streaming-integration-book" target="_blank"&gt;Streaming Integration&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.infoq.com/minibooks/java-dynamic-proxies/" target="_blank"&gt;Dynamic Proxies in Java&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Hope you enjoy the list! Share it, and comment with your free picks!&lt;br /&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/c6wje5Dlmlg" height="1" width="1" alt=""/&gt;</content><summary>There is a rise in offerings of free educational content, free software, free cloud resources with the single goal of capturing the new kingmaker's attention. While this is a change for good, I predict that is not going to be enough and this trend will only increase in the future. In a similar spirit, here I want to quickly share my favorite Kubernetes related books offered free of charge. I've re...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2020-09-11T09:48:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2020/09/must-read-free-kubernetes-books.html</feedburner:origLink></entry><entry><title>5 tips for developing Kubernetes Operators with the new Operator SDK</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Vsk2DfebKVk/" /><category term="ansible" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Go" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Kubernetes Operators" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift Operator" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><category term="operator-sdk" scheme="searchisko:content:tags" /><author><name>Laurent Broudoux</name></author><id>searchisko:content:id:jbossorg_blog-5_tips_for_developing_kubernetes_operators_with_the_new_operator_sdk</id><updated>2020-09-11T07:00:59Z</updated><published>2020-09-11T07:00:59Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/topics/kubernetes/operators/"&gt;Kubernetes Operators&lt;/a&gt; are all the rage this season, and the fame is well deserved. Operators are evolving from being used primarily by technical-infrastructure gurus to becoming more mainstream, &lt;a href="https://developers.redhat.com/blog/2020/04/08/why-kubernetes-native-instead-of-cloud-native/"&gt;Kubernetes-native&lt;/a&gt; tools for managing complex applications. Kubernetes Operators today are important for cluster administrators and ISV providers, and also for custom applications developed in house. They provide the base for a standardized operational model that is similar to what cloud providers offer. Operators also open the door to fully portable workloads and services on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The new Kubernetes &lt;a target="_blank" rel="nofollow" href="https://operatorframework.io"&gt;Operator Framework&lt;/a&gt; is an open source toolkit that lets you manage Kubernetes Operators in an effective, automated, and scalable way. The Operator Framework consists of three components: the &lt;a target="_blank" rel="nofollow" href="https://sdk.operatorframework.io"&gt;Operator SDK&lt;/a&gt;, the &lt;a target="_blank" rel="nofollow" href="https://github.com/operator-framework/operator-lifecycle-manager"&gt;Operator Lifecycle Manager&lt;/a&gt;, and &lt;a target="_blank" rel="nofollow" href="https://operatorhub.io"&gt;OperatorHub&lt;/a&gt;. In this article, I introduce tips and tricks for working with the &lt;a target="_blank" rel="nofollow" href="https://sdk.operatorframework.io"&gt;Operator SDK&lt;/a&gt;. The Operator SDK 1.0.0 release shipped in mid-August, so it&amp;#8217;s a great time to have a look at it.&lt;/p&gt; &lt;p&gt;&lt;span id="more-771997"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: Started by CoreOS and pursued by Red Hat for the past year, the Operator Framework initiative entered incubation with the Cloud Native Computing Foundation in July 2020.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-772017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/08/operator-sdk-tips-n-tricks-1024x288.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/operator-sdk-tips-n-tricks-1024x288.png" alt="Operator SDK Tips and Tricks" width="640" height="180" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/operator-sdk-tips-n-tricks-1024x288.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/operator-sdk-tips-n-tricks-300x84.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/operator-sdk-tips-n-tricks-768x216.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/operator-sdk-tips-n-tricks.png 1574w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;h2&gt;Exploring the Kubernetes Operator SDK&lt;/h2&gt; &lt;p&gt;I took advantage of the summer holidays to explore the new Operator SDK 1.0.0 release. For my experimentation, I developed Operators using &lt;a target="_blank" rel="nofollow" href="https://sdk.operatorframework.io/docs/building-operators/helm/quickstart/"&gt;Helm&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://sdk.operatorframework.io/docs/building-operators/ansible/quickstart/"&gt;Ansible&lt;/a&gt;, and &lt;a target="_blank" rel="nofollow" href="https://sdk.operatorframework.io/docs/building-operators/golang/quickstart/"&gt;Go&lt;/a&gt;, and deployed them on both vanilla Kubernetes and &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt;. These languages are the ones proposed by Operator SDK and they offer a range of capabilities, from simple to very sophisticated Operators. Of course, you can use other technologies to develop your Operator as well, like &lt;a href="https://developers.redhat.com/blog/category/python/"&gt;Python&lt;/a&gt; or &lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt;Quarkus&lt;/a&gt;. I found good resources to guide me—namely, the &amp;#8216;&lt;a href="https://developers.redhat.com/blog/2020/08/21/hello-world-tutorial-with-kubernetes-operators/"&gt;Hello, World&amp;#8217; tutorial with Kubernetes Operators&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://github.com/operator-framework/community-operators/blob/master/docs/best-practices.md"&gt;Operator best practices&lt;/a&gt;, and &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/kubernetes-operators-best-practices"&gt;Kubernetes Operators best practices for Go&lt;/a&gt;—but I am not that familiar with Go or Ansible, so I scratched my head a lot. The tips I&amp;#8217;m sharing are all things that I wish I had known before I started. I hope that they will also help you.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: All of the code examples and resources we&amp;#8217;ll use are available in the &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-france-sa/openshift-by-example-operators"&gt;GitHub repository for this article&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Tip 1: Handling default CRD values&lt;/h2&gt; &lt;p&gt;Every Kubernetes Operator comes with its own custom resource definition (CRD), which is the grammar used to describe high-level resource specifications in a Kubernetes cluster. From a first-time user perspective, a simpler CRD is better; however, experienced users will appreciate the advanced tweaking options. Handling default values for all of your custom resource instances is crucial for keeping things simple and configurable, but each tool does it a little differently.&lt;/p&gt; &lt;p&gt;As an example, let&amp;#8217;s say that we want to deploy an application made of two components: a web application and a database. First-time users would deploy it using a simple custom resource like the one below:&lt;/p&gt; &lt;pre&gt;apiVersion: redhat.com/v1beta1 kind: FruitsCatalog metadata: name: fruitscatalog-sample spec: appName: my-fruits-catalog &lt;/pre&gt; &lt;p&gt;We will also need advanced options for the number of replicas, persistent storage, ingress, and so on.&lt;/p&gt; &lt;h3&gt;Custom resource default values with Helm&lt;/h3&gt; &lt;p&gt;A Helm chart defines a &lt;code&gt;values.yaml&lt;/code&gt; file for handling custom resource default values. Using the Helm-based Operator SDK, it&amp;#8217;s pretty easy to add consistent values to our example file:&lt;/p&gt; &lt;pre&gt;# Default values for fruitscatalog. appName: fruits-catalog-helm webapp: replicaCount: 1 image: quay.io/lbroudoux/fruits-catalog:latest [...] mongodb: install: true image: centos/mongodb-34-centos7:latest persistent: true volumeSize: 2Gi [...] &lt;/pre&gt; &lt;h3&gt;Custom resource default values with Ansible&lt;/h3&gt; &lt;p&gt;The Ansible-based Operator SDK does not provide an out-of-the-box way to add handle custom resource default values. The trick I&amp;#8217;ve found requires that you make three modifications to your Operator project.&lt;/p&gt; &lt;p&gt;First, create a &lt;code&gt;roles/fruitscatalog/default/main.yml&lt;/code&gt; file for handling default values. Be aware of Ansible&amp;#8217;s usage of &lt;a target="_blank" rel="nofollow" href="https://en.wikipedia.org/wiki/Snake_case"&gt;snake case&lt;/a&gt;, which is different from the &lt;a target="_blank" rel="nofollow" href="https://en.wikipedia.org/wiki/Camel_case"&gt;camel case&lt;/a&gt; normally used for custom resource attributes. As an example, Ansible transforms &lt;code&gt;replicaCount&lt;/code&gt; into &lt;code&gt;replica_count&lt;/code&gt;, so you have to use this form in your Operator:&lt;/p&gt; &lt;pre&gt;--- # defaults file for fruitscatalog name: fruits-catalog-ansible webapp: replica_count: 1 image: quay.io/lbroudoux/fruits-catalog:latest [...] mongodb: install: true image: centos/mongodb-34-centos7:latest persistent: true volume_size: 2Gi [...] &lt;/pre&gt; &lt;p&gt;Once this file is present in your role, the Operator SDK will use it to initialize the missing parts in the user-supplied custom resource. The limit of this approach is that the SDK only realizes a first-level merge. If a user only puts the &lt;code&gt;webapp.replicaCount&lt;/code&gt; into the custom resource, the other default child attributes will not be merged into the &lt;code&gt;webapp&lt;/code&gt; variable. Basically, you will have to handle the merge process explicitly, using Ansible&amp;#8217;s &lt;code&gt;combine()&lt;/code&gt; filter.&lt;/p&gt; &lt;p&gt;So, at the very beginning of the role, we need to ensure that we will have a complete resource based on what&amp;#8217;s provided by the user and merged with default:&lt;/p&gt; &lt;pre&gt;- name: Load default values from defaults/main.yml include_vars: file: ../defaults/main.yml name: default_cr - name: Complete Custom Resource spec with default values set_fact: webapp_full: "{{ default_cr.webapp|combine(webapp, recursive=True) }}" mongodb_full: "{{ default_cr.mongodb|combine(mongodb, recursive=True) }}" &lt;/pre&gt; &lt;p&gt;The trick here is that the &lt;code&gt;webapp&lt;/code&gt; and &lt;code&gt;mongodb&lt;/code&gt; variables initialized by the SDK cannot be written; you will have to recreate new variables like &lt;code&gt;webapp_full&lt;/code&gt; and base your Ansible template on this later one. What&amp;#8217;s nice is that this approach is fully functional when running your Kubernetes Operator locally using &lt;code&gt;make run&lt;/code&gt; or &lt;code&gt;ansible-operator run&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Custom resources default values with Go&lt;/h3&gt; &lt;p&gt;The Go-based Operator SDK also requires its own approach. You can define an initialization method in the controller (as described in &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/kubernetes-operators-best-practices"&gt;Kubernetes Operators best practices&lt;/a&gt;), but I believe there&amp;#8217;s a better way of handling it.&lt;/p&gt; &lt;p&gt;Using the Kubernetes &lt;code&gt;apiextensions.k8s.io/v1&lt;/code&gt; API, it is now possible to define default values directly within the CRD. In Helm and Ansible, you can &lt;a target="_blank" rel="nofollow" href="https://master.sdk.operatorframework.io/docs/building-operators/ansible/reference/advanced_options/#custom-resources-with-openapi-validation"&gt;complete the OpenAPI part of the CRD manually&lt;/a&gt;. For a Go-based Operator, you can use the &lt;code&gt;+kubebuilder&lt;/code&gt; comments in your Go code:&lt;/p&gt; &lt;pre&gt;// WebAppSpec defines the desired state of WebApp // +k8s:openapi-gen=true type WebAppSpec struct { // +kubebuilder:default:=1 ReplicaCount int32 `json:"replicaCount,omitempty"` // +kubebuilder:default:="quay.io/lbroudoux/fruits-catalog:latest" Image string `json:"image,omitempty"` [...] } &lt;/pre&gt; &lt;p&gt;To enable this option, you have to tweak the project&amp;#8217;s &lt;code&gt;Makefile&lt;/code&gt; to force the SDK to generate &lt;code&gt;apiextensions.k8s.io/v1&lt;/code&gt; manifests:&lt;/p&gt; &lt;pre&gt;CRD_OPTIONS ?= "crd:trivialVersions=true,crdVersions=v1" &lt;/pre&gt; &lt;p&gt;Running the &lt;code&gt;make manifests&lt;/code&gt; command in your project generates a full CRD with default values for future custom resource instances:&lt;/p&gt; &lt;pre&gt;--- apiVersion: apiextensions.k8s.io/v1 kind: CustomResourceDefinition metadata: annotations: controller-gen.kubebuilder.io/version: v0.3.0 creationTimestamp: null name: fruitscatalogs.redhat.com spec: group: redhat.com names: kind: FruitsCatalog listKind: FruitsCatalogList plural: fruitscatalogs singular: fruitscatalog scope: Namespaced versions: - name: v1beta1 schema: openAPIV3Schema: [...] [...] spec: description: FruitsCatalogSpec defines the desired state of FruitsCatalog properties: [...] webapp: description: WebAppSpec defines the desired state of WebApp properties: image: default: quay.io/lbroudoux/fruits-catalog:latest type: string replicaCount: format: int32 default: 1 type: integer [...] &lt;/pre&gt; &lt;p&gt;That&amp;#8217;s pretty neat.&lt;/p&gt; &lt;h2&gt;Tip 2: Preparing your Operator for OpenShift&lt;/h2&gt; &lt;p&gt;One nice thing about the Operator SDK is that it scaffolds a huge part of your project from &lt;code&gt;operator-sdk init&lt;/code&gt; or &lt;code&gt;operator-sdk create api&lt;/code&gt;. That scaffold is much of what you need to deploy your Operator to OpenShift, but it&amp;#8217;s not everything. During my experiments, I found one missing piece, which is related to role-based access control (RBAC) permissions. Essentially, the Operator should be endorsed to do its job without having full access to the cluster.&lt;/p&gt; &lt;p&gt;When generating Kubernetes resources, an Operator should try to register itself as the owner of the resource. That makes it easier to watch the resource and implement finalizers. Typically, the Operator can include an &lt;code&gt;ownerReference&lt;/code&gt; field that references the created CR:&lt;/p&gt; &lt;pre&gt;ownerReferences: - apiVersion: redhat.com/v1beta1 blockOwnerDeletion: true controller: true kind: FruitsCatalog name: fruitscatalog-sample uid: c5d7e996-013f-40ca-bd19-14ba73728eaf &lt;/pre&gt; &lt;p&gt;The default scaffolding works well on vanilla Kubernetes. But on OpenShift, the Operator needs to be able to set finalizers on the custom resource after it&amp;#8217;s been created in order to set the &lt;code&gt;ownerReference&lt;/code&gt; block. So now you have to add the extra permissions for your Operator as described below.&lt;/p&gt; &lt;h3&gt;Adding RBAC permissions with Helm and Ansible&lt;/h3&gt; &lt;p&gt;Using Helm and Ansible-based Operators, you can configure the RBAC permissions within the &lt;code&gt;config/rbac/role.yaml&lt;/code&gt; file. You would typically add something like this:&lt;/p&gt; &lt;pre&gt;- apiGroups: - redhat.com resources: - fruitscatalogs - fruitscatalogs/status - fruitscatalogs/finalizers # Missing line that is not added by the SDK verbs: - create - delete - get - list - patch - update - watch&lt;/pre&gt; &lt;h3&gt;Adding RBAC permissions with Go&lt;/h3&gt; &lt;p&gt;Using Go-based Operators, you can use a &lt;code&gt;+kubebuilder:rbac&lt;/code&gt; comment to set the RBAC permissions directly into the controller source code. Just add something like this to your &lt;code&gt;Reconcile&lt;/code&gt; function comments:&lt;/p&gt; &lt;pre&gt;[...] // +kubebuilder:rbac:groups=redhat.com,resources=fruitscatalogs/finalizers,verbs=get;create;update;patch;delete // Reconcile the state rfor a FruitsCatalog object and makes changes based on the state read and what is in the FruitsCatalogSpec. func (r *FruitsCatalogG1Reconciler) Reconcile(req ctrl.Request) (ctrl.Result, error) { [...] }&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: These permissions might be added by default in a future release. See &lt;a target="_blank" rel="nofollow" href="https://github.com/operator-framework/operator-sdk/pull/3779"&gt;Pull Request #3779: Helm Operator: add finalizers permission for created APIs&lt;/a&gt; for details and tracking.&lt;/p&gt; &lt;h2&gt;Tip 3: Discovering the cluster you&amp;#8217;re running on&lt;/h2&gt; &lt;p&gt;Operators are expected to be adaptable, which means that they have to be able to change their actions and the resources they manage depending on the environment. A straightforward illustration is using route capabilities instead of ingress when running on OpenShift. To make that change, a Kubernetes Operator should be able to discover the Kubernetes distribution that it is deployed on and any extensions that have been installed on the cluster. Currently, such advanced discovery can only be done using the Ansible- and Go-based Operators.&lt;/p&gt; &lt;h3&gt;Advanced discovery with Ansible&lt;/h3&gt; &lt;p&gt;In Ansible-based Operators, we use a &lt;code&gt;k8s&lt;/code&gt; lookup requesting the &lt;code&gt;api_groups&lt;/code&gt; present on the cluster. Then, we should be able to detect that we&amp;#8217;re running on OpenShift and create a &lt;code&gt;Route&lt;/code&gt; only when appropriate:&lt;/p&gt; &lt;pre&gt;- name: Get information about the cluster set_fact: api_groups: "{{ lookup('k8s', cluster_info='api_groups') }}" [...] - name: The Webapp Route is present if OpenShift when: "'route.openshift.io' in api_groups" k8s: state: present definition: "{{ lookup('template', 'webapp-route.yml') | from_yaml }}" &lt;/pre&gt; &lt;h3&gt;Advanced discovery with Go&lt;/h3&gt; &lt;p&gt;This type of discovery is a little more complex using Go-based Operators. In this case, we use a specific &lt;code&gt;DiscoveryClient&lt;/code&gt; from the &lt;code&gt;discovery&lt;/code&gt; package. Once retrieved, you can make a request to retrieve the API groups and detect that you are on OpenShift:&lt;/p&gt; &lt;pre&gt;import { [...] "k8s.io/client-go/discovery" } // getDiscoveryClient returns a discovery client for the current reconciler func getDiscoveryClient(config *rest.Config) (*discovery.DiscoveryClient, error) { return discovery.NewDiscoveryClientForConfig(config) } // Reconcile the state for a FruitsCatalog object and makes changes based on the state read and what is in the FruitsCatalogSpec. func (r *FruitsCatalogG1Reconciler) Reconcile(req ctrl.Request) (ctrl.Result, error) { [...] // The discovery package is used to discover APIs supported by a Kubernetes API server. config, err := ctrl.GetConfig() if err == nil andand config != nil { dclient, err := getDiscoveryClient(config) if err == nil andand dclient != nil { apiGroupList, err := dclient.ServerGroups() if err != nil { reqLogger.Info("Error while querying ServerGroups, assuming we're on Vanilla Kubernetes") } else { for i := 0; i &amp;#60; len(apiGroupList.Groups); i++ { if strings.HasSuffix(apiGroupList.Groups[i].Name, ".openshift.io") { isOpenShift = true reqLogger.Info("We detected being on OpenShift! Wouhou!") break } } } } else { reqLogger.Info("Cannot retrieve a DiscoveryClient, assuming we're on Vanilla Kubernetes") } } [...] } &lt;/pre&gt; &lt;p&gt;You could use this mechanism to detect other installed Operators, &lt;code&gt;Ingress&lt;/code&gt; classes, storage capabilities, and so on.&lt;/p&gt; &lt;h2&gt;Tip 4: Using extensions APIs in Go-based Operators&lt;/h2&gt; &lt;p&gt;This tip is specific to Go-based Operators. As Ansible and Helm are treating everything as YAML, you can freely describe any kind of resources you need. Their validation will only occur on the cluster API-side when doing OpenAPI v3 validation or through an admission hook.&lt;/p&gt; &lt;p&gt;Go is a strongly typed language, which is clearly an advantage when you are dealing with complex Operators and data structures. With Go you can rely on tools like Integrated Development Environment (IDE) to help you through code completion and inline documentation. Thus you are able to validate the Kubernetes resources you are using before actually submitting them to the cluster. However, when you want to build something with API extensions, you&amp;#8217;ll have to integrate them as Go dependencies and register them within your own client runtime. I&amp;#8217;ll show you how to do that.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: While the following discussion might seem obvious to developers familiar with Go and Kubernetes, my background is in Java, and it took me a moment to figure it out.&lt;/p&gt; &lt;h3&gt;Integrating API extensions as Go dependencies&lt;/h3&gt; &lt;p&gt;First, you have to include the new API extension dependencies within your &lt;code&gt;go.mod&lt;/code&gt; file at the project root. For this, Go modules use either a &lt;code&gt;Git&lt;/code&gt; tag or branch name (in the latter case, it appears to translate the branch name into the latest commit hash). Following my previous example, if I want to use an OpenShift-specific data structure for a &lt;code&gt;Route&lt;/code&gt; resource, I have to add the following:&lt;/p&gt; &lt;pre&gt;require ( [...] github.com/openshift/api v3.9.0+incompatible // v3.9.0 is the last tag. New releases are managed as branches // github.com/openshift/client-go release-4.5 // As an example of integrating the OpenShift-specific client lib ) &lt;/pre&gt; &lt;p&gt;The next step is to register one or many packages into the supported runtime schemes. This allows you to use &lt;code&gt;Route&lt;/code&gt; Go objects with the standard Kubernetes Go client. For that, you have to modify the &lt;code&gt;main.go&lt;/code&gt; file that was generated at the project root. Add a new &lt;code&gt;import&lt;/code&gt; and register the scheme into the &lt;code&gt;init()&lt;/code&gt; function:&lt;/p&gt; &lt;pre&gt;import ( [...] routev1 "github.com/openshift/api/route/v1" ) func init() { utilruntime.Must(clientgoscheme.AddToScheme(scheme)) utilruntime.Must(redhatv1beta1.AddToScheme(scheme)) utilruntime.Must(routev1.AddToScheme(scheme)) // +kubebuilder:scaffold:scheme } &lt;/pre&gt; &lt;p&gt;Finally, within your Go &lt;code&gt;Reconcile()&lt;/code&gt; function or another Operator package, you&amp;#8217;ll be able to manipulate the &lt;code&gt;Route&lt;/code&gt; structure in a strongly typed fashion that helps keep you on track. You can then create this object using the standard client present into your controller:&lt;/p&gt; &lt;pre&gt;return androutev1.Route{ [...] Spec: routev1.RouteSpec{ To: routev1.RouteTargetReference{ Name: spec.AppName + "-webapp", Kind: "Service", Weight: andweight, }, Port: androutev1.RoutePort{ TargetPort: intstr.IntOrString{ Type: intstr.String, StrVal: "http", }, }, TLS: androutev1.TLSConfig{ Termination: routev1.TLSTerminationEdge, InsecureEdgeTerminationPolicy: routev1.InsecureEdgeTerminationPolicyNone, }, WildcardPolicy: routev1.WildcardPolicyNone, }, }&lt;/pre&gt; &lt;h2&gt;Tip 5: Adjusting Operator resource consumption&lt;/h2&gt; &lt;p&gt;My final tip is to &lt;i&gt;watch your resources&lt;/i&gt;—which is a sentence with a double meaning.&lt;/p&gt; &lt;p&gt;In the specific context of Kubernetes Operators, I mean to say that the custom resource is watched by the Operator controller, often called the &lt;i&gt;Operand&lt;/i&gt;. It is important to configure your Operator to watch dependent resources. While there is some really good documentation on watching dependent resources (see the docs for &lt;a target="_blank" rel="nofollow" href="https://master.sdk.operatorframework.io/docs/building-operators/ansible/reference/dependent-watches/"&gt;dependent watches&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://master.sdk.operatorframework.io/docs/building-operators/golang/tutorial/#resources-watched-by-the-controller"&gt;resources watched by the controller&lt;/a&gt;, and using&lt;a target="_blank" rel="nofollow" href="https://master.sdk.operatorframework.io/docs/building-operators/golang/references/event-filtering/#using-predicates"&gt; predicates for event filtering&lt;/a&gt;), there&amp;#8217;s no need to dive into these right now. What&amp;#8217;s important to know is that watching more software resources impacts your physical resources, namely, CPU and memory.&lt;/p&gt; &lt;p&gt;That is the second meaning of the sentence: Once your Operator starts growing—which can happen very quickly—you should think carefully about the resources that it consumes. The default requests and limits set low values that should be adapted to your needs. This is especially true for Helm- or Ansible-based Operators.&lt;/p&gt; &lt;p&gt;Before you start raising CPU and memory, make sure you pay attention to the &lt;i&gt;concurrent reconciles&lt;/i&gt; that your Operator should manage. Simply put: How many custom resources should your Operator manage simultaneously? By default, the Operator SDK sets this value to the number of cores present on the node running the Operator. If you&amp;#8217;re watching many resources and you have big nodes, however, then this setting could act as a multiplying factor for the consumed resources. Moreover, if your Kubernetes Operator is scoped to a specific namespace, there is a little chance that you&amp;#8217;ll need 16 concurrent reconciles for one or two custom resources in your namespace.&lt;/p&gt; &lt;h3&gt;Managing concurrent reconciles&lt;/h3&gt; &lt;p&gt;You can easily use the &lt;code&gt;—max-concurrent-reconciles&lt;/code&gt; flag to set the number of maximum concurrent reconciles. The new Operator SDK project layout takes advantage of &lt;a target="_blank" rel="nofollow" href="https://kubernetes.io/blog/2018/05/29/introducing-kustomize-template-free-configuration-customization-for-kubernetes/"&gt;Kustomize&lt;/a&gt;, so you&amp;#8217;ll have to change the &lt;code&gt;config/default/manager_auth_proxy_patch.yaml&lt;/code&gt; like this:&lt;/p&gt; &lt;pre&gt;apiVersion: apps/v1 kind: Deployment metadata: name: controller-manager namespace: system spec: template: spec: containers: - name: kube-rbac-proxy [...] - name: manager args: - "--metrics-addr=127.0.0.1:8080" - "--enable-leader-election" - "--leader-election-id=fruits-catalog-operator" - "--max-concurrent-reconciles=4"&lt;/pre&gt; &lt;p&gt;After that, you can set up the resources requests and limits in the usual Kubernetes way.&lt;/p&gt; &lt;h2&gt;Wrap up&lt;/h2&gt; &lt;p&gt;In this article, I&amp;#8217;ve shared five tips that ease my life while developing Operators with the newly released Kubernetes Operator SDK 1.0.0. Having a strong background in Java, but not in Ansible or Go, the issues that I discussed all made me scratch my head for a few hours. The tips might be obvious to experienced developers, but I hope that they will save other developers&amp;#8217; time.&lt;/p&gt; &lt;p&gt;What about you? What are your tricks for working with Kubernetes Operators?&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#38;linkname=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#38;linkname=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#38;linkname=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#38;linkname=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#38;linkname=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#38;linkname=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#38;linkname=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2F5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk%2F&amp;#038;title=5%20tips%20for%20developing%20Kubernetes%20Operators%20with%20the%20new%20Operator%20SDK" data-a2a-url="https://developers.redhat.com/blog/2020/09/11/5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk/" data-a2a-title="5 tips for developing Kubernetes Operators with the new Operator SDK"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/11/5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk/"&gt;5 tips for developing Kubernetes Operators with the new Operator SDK&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Vsk2DfebKVk" height="1" width="1" alt=""/&gt;</content><summary>Kubernetes Operators are all the rage this season, and the fame is well deserved. Operators are evolving from being used primarily by technical-infrastructure gurus to becoming more mainstream, Kubernetes-native tools for managing complex applications. Kubernetes Operators today are important for cluster administrators and ISV providers, and also for custom applications developed in house. They pr...</summary><dc:creator>Laurent Broudoux</dc:creator><dc:date>2020-09-11T07:00:59Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/11/5-tips-for-developing-kubernetes-operators-with-the-new-operator-sdk/</feedburner:origLink></entry><entry><title>Quarkus and Jakarta EE: Together, or not?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/eVNTpoh9ppE/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="jakarta ee" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Java EE" scheme="searchisko:content:tags" /><category term="microprofile" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="Quarkus Jakarta EE" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Mark Little</name></author><id>searchisko:content:id:jbossorg_blog-quarkus_and_jakarta_ee_together_or_not</id><updated>2020-09-11T07:00:46Z</updated><published>2020-09-11T07:00:46Z</published><content type="html">&lt;p&gt;In this article, I answer a question that I have seen asked on various forums: Will &lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt;Quarkus&lt;/a&gt; be compatible with &lt;a target="_blank" rel="nofollow" href="https://jakarta.ee/"&gt;Jakarta EE&lt;/a&gt;? To understand our answer to that question, it is helpful to know the history of Quarkus and what we&amp;#8217;re trying to achieve with it. So, please indulge me while I lay that groundwork.&lt;/p&gt; &lt;h2&gt;A short history of Quarkus and Java EE&lt;/h2&gt; &lt;p&gt;When Emmanuel Bernard, Jason Greene, Bob McWhirter, and I first discussed kicking off the ThornFly.x proof of concept, &lt;a target="_blank" rel="nofollow" href="https://thorntail.io/posts/thorntail-community-announcement-on-quarkus/"&gt;which would later become Quarkus&lt;/a&gt;, we had conversations about where &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java EE&lt;/a&gt; (now Jakarta EE) would eventually fit. I think we all agreed that we already had the best &lt;a href="https://developers.redhat.com/topics/open-source"&gt;open source&lt;/a&gt; implementation of Java EE in the form of WildFly and &lt;a href="https://developers.redhat.com/products/eap/overview"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt; (JBoss EAP). Creating yet another addition to this space seemed confusing at best. At worst, we feared that it would split our engineering and open source community efforts.&lt;/p&gt; &lt;p&gt;&lt;span id="more-776377"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Unfortunately, we had another reason to resist making Quarkus compatible with Java EE: Despite &lt;a target="_blank" rel="nofollow" href="https://developer.jboss.org/blogs/mark.little/2019/05/03/jakarta-ee-and-the-future"&gt;the best&lt;/a&gt; and often &lt;a target="_blank" rel="nofollow" href="https://developer.jboss.org/blogs/mark.little/2016/06/12/does-java-ee-have-a-future"&gt;Herculean efforts&lt;/a&gt; of &lt;a href="https://developer.jboss.org/blogs/mark.little/2015/11/15/is-java-ee-still-relevant"&gt;Red Hat engineers&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://developer.jboss.org/blogs/mark.little/2011/07/27/application-servers-are-dead"&gt;our communities&lt;/a&gt;, and other vendors, Java EE was seen as slow-moving, monolithic, and not a good option for new developers—especially anyone looking at &lt;a href="https://developers.redhat.com/topics/microservices"&gt;building microservices&lt;/a&gt; and targeting greenfield efforts.&lt;/p&gt; &lt;p&gt;Some of this perception was inflated by negative press from detractors, but &lt;a target="_blank" rel="nofollow" href="https://www.theregister.com/2017/02/22/java_ee_8_provisional_date/"&gt;there was also truth to it&lt;/a&gt;, based on the use cases that Java EE was developed for over two decades ago.&lt;/p&gt; &lt;h2&gt;Eclipse MicroProfile&lt;/h2&gt; &lt;p&gt;All of this might sound familiar if you&amp;#8217;ve watched Java EE for a while and &lt;a href="https://developers.redhat.com/videos/youtube/GKYROutwJHU"&gt;observed the development of Eclipse MicroProfile&lt;/a&gt;. In 2016, Red Hat, Tomitribe, IBM, and a host of others came together to launch MicroProfile. We intended to take the best bits of Java EE and combine them with other open source efforts that were not considered appropriate for Java EE (for example, some of the good things happening with &lt;a target="_blank" rel="nofollow" href="https://netflix.github.io"&gt;Netflix OSS&lt;/a&gt; at the time). From this foundation, we would release a set of open standards focused on enterprise microservices.&lt;/p&gt; &lt;p&gt;In the years since, Eclipse MicroProfile has gone from strength to strength, with a vibrant community, many specification releases, and a range of open source implementations. It has also been embraced by &lt;a target="_blank" rel="nofollow" href="https://adambien.blog/roller/abien/entry/quarkus_vs_wildfly"&gt;Java community leaders&lt;/a&gt;, who appreciate being able to use selected Java EE APIs and run certain MicroProfile implementations within a Java EE application server.&lt;/p&gt; &lt;h3&gt;Quarkus innovations and MicroProfile&lt;/h3&gt; &lt;p&gt;Having Quarkus track and influence MicroProfile makes sense: Developers already familiar with Java EE can reuse their skills and knowledge, and we can reuse many of our existing, compatible specification implementations as Quarkus extensions. With that said, we will have to evaluate whether Quarkus needs to be fully MicroProfile compatible. That decision is based on how quickly we innovate in Quarkus and whether those innovations are generally applicable to the MicroProfile community. As Red Hat has said from the outset, we don&amp;#8217;t believe in innovating within standards. Not every Quarkus innovation will necessarily become part of MicroProfile, and not all of our suggestions are likely to be accepted for MicroProfile. That&amp;#8217;s perfectly fine; it&amp;#8217;s one sign of a vibrant community.&lt;/p&gt; &lt;h3&gt;The reactive paradigm&lt;/h3&gt; &lt;p&gt;For a concrete example of what I mean, much of the MicroProfile community resists embracing the reactive paradigm. At Red Hat, we have been heavily involved in the reactive space for many years, with efforts such as &lt;a href="https://developers.redhat.com/videos/youtube/o-cBfanMJ8A"&gt;Eclipse Vert.x&lt;/a&gt; and now &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;Knative/Serverless&lt;/a&gt;. However, we see limits to bringing existing Java EE specifications to the reactive effort because Java EE&amp;#8217;s original designs are synchronous. We haven&amp;#8217;t always been able to persuade the wider community of that, so we focused our reactive innovations on Vert.x, and &lt;a href="https://developers.redhat.com/blog/2020/08/07/reactive-quarkus-a-java-mutiny/"&gt;now on Quarkus&lt;/a&gt;. We believe that we can show how important these new approaches are and how well our communities are adopting them. By innovating elsewhere, we might eventually persuade the MicroProfile communities to adopt the reactive paradigm.&lt;/p&gt; &lt;h2&gt;What about Quarkus and Jakarta EE?&lt;/h2&gt; &lt;p&gt;Most developers know that Java EE has moved to the Eclipse Foundation and is now rebranded as Jakarta EE. The new mission for enterprise Java under Eclipse is to &lt;a target="_blank" rel="nofollow" href="https://jakarta.ee/about/"&gt;drive cloud-native, mission-critical applications&lt;/a&gt;. Can&amp;#8217;t we fold that into Quarkus?&lt;/p&gt; &lt;p&gt;Well, let&amp;#8217;s not get carried away. So far, Jakarta EE 8 is technically equivalent to Java EE 8. And Jakarta EE 9, which is being released later this year, is focused on package-name changes from &lt;code&gt;javax&lt;/code&gt; to &lt;code&gt;jakarta&lt;/code&gt;. What becomes of Jakarta EE 10, and how well (or if) Jakarta and MicroProfile play together will be determined.&lt;/p&gt; &lt;p&gt;As with any open source effort, many factors must come together for an optimal outcome. At the least, Jakarta EE has to offer a much quicker release cadence for updates and innovation. Jakarta EE also must distinguish itself from the negative perceptions associated with Java EE. To do well, it should appear so different from Java EE that there is, in fact, an immediate new problem.&lt;/p&gt; &lt;p&gt;Java EE&amp;#8217;s success is based on prioritizing backward compatibility and slow-moving changes. That priority has allowed operations teams to confidently deploy mission-critical applications that would not require changes for months or years at a time. While Jakarta EE might be able to both fulfill its new mission and address the past use cases, it won&amp;#8217;t be an easy juggling act. It&amp;#8217;s not likely to materialize overnight.&lt;/p&gt; &lt;h2&gt;Will Quarkus be Jakarta EE compatible?&lt;/h2&gt; &lt;p&gt;I&amp;#8217;ve given a brief version of the background, so let&amp;#8217;s return to the original question: Will Quarkus be compatible with Jakarta EE? The short answer is that I can&amp;#8217;t see that happening with Jakarta EE 8 or Jakarta EE 9. Of course, I would never say never: No one can predict where Jakarta EE is headed. However, making Quarkus Jakarta EE-compatible would be very difficult to accomplish with full native-Java support. Attempting it would also likely confuse the perception of what Quarkus is today. Quarkus doesn&amp;#8217;t need to be compatible with Jakarta EE to succeed. And, besides, we&amp;#8217;ve got a better opportunity to track and influence the future of the Java enterprise standard with WildFly and JBoss EAP.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Now, I recognize that this news might be hard for some community members to accept, especially based on the interest we&amp;#8217;ve seen about this topic. But I hope that you will understand our reasoning, even if you disagree with it. Red Hat and the wider community have a huge opportunity with Quarkus to redefine enterprise Java in a Kubernetes world. Doing that will require all of our attention and effort. So, I&amp;#8217;ll leave you with what Douglas McIlroy said about the &lt;a target="_blank" rel="nofollow" href="https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch01s06.html"&gt;Unix philosophy&lt;/a&gt;: &amp;#8220;Make each program do one thing well; to do a new job, build afresh rather than complicate old programs by adding new features.&amp;#8221;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#38;linkname=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#38;linkname=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#38;linkname=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#38;linkname=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#38;linkname=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#38;linkname=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#38;linkname=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F11%2Fquarkus-and-jakarta-ee-together-or-not%2F&amp;#038;title=Quarkus%20and%20Jakarta%20EE%3A%20Together%2C%20or%20not%3F" data-a2a-url="https://developers.redhat.com/blog/2020/09/11/quarkus-and-jakarta-ee-together-or-not/" data-a2a-title="Quarkus and Jakarta EE: Together, or not?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/11/quarkus-and-jakarta-ee-together-or-not/"&gt;Quarkus and Jakarta EE: Together, or not?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/eVNTpoh9ppE" height="1" width="1" alt=""/&gt;</content><summary>In this article, I answer a question that I have seen asked on various forums: Will Quarkus be compatible with Jakarta EE? To understand our answer to that question, it is helpful to know the history of Quarkus and what we’re trying to achieve with it. So, please indulge me while I lay that groundwork. A short history of Quarkus and Java EE When Emmanuel Bernard, Jason Greene, Bob McWhirter, and I...</summary><dc:creator>Mark Little</dc:creator><dc:date>2020-09-11T07:00:46Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/11/quarkus-and-jakarta-ee-together-or-not/</feedburner:origLink></entry><entry><title>From code to production with OpenShift Pipelines and Argo CD</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/pi6DSYHP4R0/" /><category term="ArgoCD" scheme="searchisko:content:tags" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="ci/cd pipeline" scheme="searchisko:content:tags" /><category term="continuous deployment" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gitops" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Mario Vázquez</name></author><id>searchisko:content:id:jbossorg_blog-from_code_to_production_with_openshift_pipelines_and_argo_cd</id><updated>2020-09-10T07:00:05Z</updated><published>2020-09-10T07:00:05Z</published><content type="html">&lt;p&gt;Our team is responsible for a small &lt;a href="https://developers.redhat.com/blog/category/go/"&gt;GoLang&lt;/a&gt; application. The application&amp;#8217;s developers are continuously sending code changes to the main branch, so for the past two years, our team has used &lt;a href="https://developers.redhat.com/courses/foundations/gitops-intro"&gt;GitOps&lt;/a&gt; for &lt;a href="https://developers.redhat.com/topics/ci-cd"&gt;continuous integration&lt;/a&gt; (CI). We started out using GitOps to deploy applications to our test clusters; then, we began using it to run day two operations in our clusters.&lt;/p&gt; &lt;p&gt;From there, we chose &lt;a target="_blank" rel="nofollow" href="https://argoproj.github.io/argo-cd/"&gt;Argo CD&lt;/a&gt; as our continuous deployment (CD) tool. When we started, it was the best fit for our workflows. It works perfectly as a GitOps tool, and it&amp;#8217;s easy to integrate with &lt;a href="https://developers.redhat.com/products/openshift"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;When &lt;a href="https://developers.redhat.com/blog/2020/04/27/modern-web-applications-on-openshift-part-4-openshift-pipelines/"&gt;OpenShift Pipelines&lt;/a&gt; was released, we decided to try it because our applications would benefit from an automated CI pipeline. We started creating pipelines to automatically build our apps whenever a new commit hit the main branch. Once we had enough experience with these tools, we considered automating our CI and CD workflows so we wouldn&amp;#8217;t need to worry about anything but writing code.&lt;/p&gt; &lt;p&gt;This article includes a demonstration of our &lt;a href="https://developers.redhat.com/topics/ci-cd/"&gt;CI/CD&lt;/a&gt; pipeline, and shows you how to set up a demonstration environment so that you can run the example application detailed below on your own. I&amp;#8217;ll also show you two videos of the build and production pipelines in action.&lt;/p&gt; &lt;h2&gt;Set up your demo environment&lt;/h2&gt; &lt;p&gt;To follow the examples in this article, will need the following installed in your development environment:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift 4.5.4&lt;/a&gt; cluster: &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-cd/releases"&gt;Argo CD v1.6.1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.5/pipelines/understanding-openshift-pipelines.html"&gt;Red Hat OpenShift Pipelines v1.0.1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Demo application: &lt;ul&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://github.com/mvazquezc/reverse-words"&gt;App repository&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://github.com/mvazquezc/reverse-words-cicd"&gt;App CI/CD repository&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Argo CD and OpenShift Pipelines&lt;/h2&gt; &lt;p&gt;First, here&amp;#8217;s a quick introduction to Argo CD and OpenShift Pipelines. Argo CD is a tool for doing GitOps continuous delivery on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; in a declarative way. You can &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/introduction-to-gitops-with-openshift"&gt;learn more about GitOps here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;OpenShift Pipelines is a CI/CD solution based on &lt;a target="_blank" rel="nofollow" href="https://tekton.dev/"&gt;Tekton&lt;/a&gt;. It adds onto Tekton&amp;#8217;s building blocks and provides a CI/CD experience through tight integration with OpenShift. You can &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/learn/topics/pipelines"&gt;learn more Tekton here&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Application scenario&lt;/h2&gt; &lt;p&gt;We want every new commit to the main branch to be linted, tested, built, and deployed in our staging environment, without manual intervention. So, the example application features a continuous integration pipeline that is in charge of linting, testing, and building the code. Argo CD manages continuous deployment and is configured to deploy the application to the staging and production environments.&lt;/p&gt; &lt;p&gt;We use &lt;a target="_blank" rel="nofollow" href="https://docs.github.com/en/developers/webhooks-and-events/creating-webhooks"&gt;webhooks in Git&lt;/a&gt; to automatically trigger pipelines and deployments when new commits hit specific branches in our repositories.&lt;/p&gt; &lt;h3&gt;The CI pipelines&lt;/h3&gt; &lt;p&gt;We have two different pipelines: One that builds the code and deploys to staging, and one that promotes staging builds to production. Before we talk about the pipelines, let&amp;#8217;s review the two Git repositories that we will be using:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The application repository (&lt;code&gt;reverse-words&lt;/code&gt;): &lt;ul&gt; &lt;li&gt;Use: Stores the source code for our application.&lt;/li&gt; &lt;li&gt;Webhooks: Notifies Tekton when new commits hit the main branch.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;The application CI/CD repository (&lt;code&gt;reverse-words-cicd&lt;/code&gt;): &lt;ul&gt; &lt;li&gt;Use: Stores the CI manifests (Tekton configurations), and the deployment manifests (Used by Argo CD).&lt;/li&gt; &lt;li&gt;Webhooks: Notifies Argo CD when deployment files are updated.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;The build pipeline&lt;/h3&gt; &lt;p&gt;Figure 1 illustrates the workflow for the build pipeline.&lt;/p&gt; &lt;div id="attachment_765507" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/BuildWorkflow.png"&gt;&lt;img aria-describedby="caption-attachment-765507" class="wp-image-765507 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/BuildWorkflow-1024x577.png" alt="A diagram of the build pipeline workflow." width="640" height="361" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/BuildWorkflow-1024x577.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/BuildWorkflow-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/BuildWorkflow-768x433.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/BuildWorkflow.png 1492w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-765507" class="wp-caption-text"&gt;Figure 1: The build pipeline workflow from the developer to staging.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The workflow is as follows:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Developers send new commits to the application repository.&lt;/li&gt; &lt;li&gt;GitHub notifies Tekton.&lt;/li&gt; &lt;li&gt;Tekton lints, tests, builds, and pushes a new container image with the new code to &lt;a target="_blank" rel="nofollow" href="https://quay.io/"&gt;Quay.io&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Tekton updates the deployment file for the stage environment in the application CI/CD repository with the new image version.&lt;/li&gt; &lt;li&gt;GitHub notifies Argo CD.&lt;/li&gt; &lt;li&gt;Argo CD runs the application deployment for staging.&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;The promotion pipeline&lt;/h3&gt; &lt;p&gt;Figure 2 shows the workflow for the promotion pipeline.&lt;/p&gt; &lt;div id="attachment_765497" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/PromoteWorkflow.png"&gt;&lt;img aria-describedby="caption-attachment-765497" class="wp-image-765497 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/PromoteWorkflow-1024x443.png" alt="A diagram of the promotion pipeline workflow." width="640" height="277" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/PromoteWorkflow-1024x443.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/PromoteWorkflow-300x130.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/PromoteWorkflow-768x332.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/PromoteWorkflow.png 1481w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-765497" class="wp-caption-text"&gt;Figure 2: The promotion pipeline workflow from developer to production.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The workflow is as follows:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Developers run the promotion pipeline.&lt;/li&gt; &lt;li&gt;Tekton runs tests on the staging environment; if everything is okay, it opens a push request (PR) into the application CI/CD repository updating the deployment file for the production environment.&lt;/li&gt; &lt;li&gt;Once the PR is merged, GitHub notifies Argo CD.&lt;/li&gt; &lt;li&gt;Argo CD runs the application deployment for production.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Ready to deploy?&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s take a look at the two pipelines we configured in our OpenShift cluster. Figure 3 shows the build pipeline.&lt;/p&gt; &lt;div id="attachment_765567" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/build-pipeline.png"&gt;&lt;img aria-describedby="caption-attachment-765567" class="wp-image-765567" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/build-pipeline.png" alt="reverse-words build pipeline: lint -&amp;#62; test -&amp;#62; build-and-push -&amp;#62; update-stage-d..." width="640" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/build-pipeline.png 674w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/build-pipeline-300x193.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-765567" class="wp-caption-text"&gt;Figure 3: The reverse-words build pipeline.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 4 shows the promotion pipeline.&lt;/p&gt; &lt;div id="attachment_765557" style="width: 606px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-765557" class="wp-image-765557 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/promote-pipeline.png" alt="reverse-words promotion pipeline: access-stage-bu... -&amp;#62; get-stage-i...release -&amp;#62; promote-stage-" width="596" height="419" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/promote-pipeline.png 596w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/promote-pipeline-300x211.png 300w" sizes="(max-width: 596px) 100vw, 596px" /&gt;&lt;p id="caption-attachment-765557" class="wp-caption-text"&gt;Figure 4: The reverse-words promotion pipeline.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We already created the Argo CD applications, so let&amp;#8217;s take a look at those next. First is the staging application, shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_765547" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/stage-argo-app.png"&gt;&lt;img aria-describedby="caption-attachment-765547" class="wp-image-765547 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/stage-argo-app-1024x297.png" alt="The staging application in Argo CD showing what's Healthy, Synced, and Sync OK" width="640" height="186" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/stage-argo-app-1024x297.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/stage-argo-app-300x87.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/stage-argo-app-768x222.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-765547" class="wp-caption-text"&gt;Figure 5: The state of each component in the reverse-words staging application.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next is the production application, shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_765537" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/prod-argo-app.png"&gt;&lt;img aria-describedby="caption-attachment-765537" class="wp-image-765537 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/prod-argo-app-1024x296.png" alt="The production application in Argo CD, showing the same states as the staging application" width="640" height="185" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/prod-argo-app-1024x296.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/prod-argo-app-300x87.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/prod-argo-app-768x222.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-765537" class="wp-caption-text"&gt;Figure 6: The state of each component in the reverse-words production application.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;At this point, we have everything ready to create a new application and then build and deploy it automatically. Let&amp;#8217;s check the application versions we&amp;#8217;re running at the moment. Figure 7 shows the stage application version after entering the following commands:&lt;/p&gt; &lt;pre&gt;$ oc -n reverse-words-stage get route -l app-reversewords-stage $ curl http://reversewords-dev.apps.codetoprod.b999.sandbox313.opentlc.com&lt;/pre&gt; &lt;div id="attachment_765527" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-stage.png"&gt;&lt;img aria-describedby="caption-attachment-765527" class="wp-image-765527 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-stage-1024x115.png" alt="A screenshot of the stage application config in the console." width="640" height="72" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-stage-1024x115.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-stage-300x34.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-stage-768x86.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-stage.png 1108w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-765527" class="wp-caption-text"&gt;Figure 7: Check the stage application version in the console.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 8 shows the production app version after entering the following commands:&lt;/p&gt; &lt;pre&gt;$ oc -n reverse-words-production get route -l app-reversewords-prod $ curl http://reversewords-prod.apps.codetoprod.b999.sandbox313.opentlc.com&lt;/pre&gt; &lt;div id="attachment_765517" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-prod.png"&gt;&lt;img aria-describedby="caption-attachment-765517" class="wp-image-765517 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-prod-1024x106.png" alt="A screenshot of the production application config in the console." width="640" height="66" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-prod-1024x106.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-prod-300x31.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-prod-768x80.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/app-prod.png 1116w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-765517" class="wp-caption-text"&gt;Figure 8: Check the production application version in the console.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;On staging, we are running the demo application&amp;#8217;s version 0.0.14 release, and on production, we are running application version 0.0.13. Next, we will create a new build, version 0.0.15, and have it deployed automatically to staging. If everything works, we will then promote this new build to production.&lt;/p&gt; &lt;h2&gt;See the demo app in action&lt;/h2&gt; &lt;p&gt;In the first video below, we update the application to version 0.0.15 and push the changes to the Git application repository. When the commit hits the main branch, a new PipelineRun is created. The pipeline lints, tests, and builds our code. Finally, it updates the application deployment file for the staging environment in the application CI/CD repository. Once the deployment file is updated, the staging application is updated automatically.&lt;/p&gt; &lt;p&gt;All of this is shown in the &amp;#8220;Build Pipeline&amp;#8221; video.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/ipLm3Anca98?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;In the &amp;#8220;Promote Pipeline&amp;#8221; video, we promote the stage release to production. First, the pipeline queries the stage application to ensure that everything is running correctly. Then, it uses a PipelineRun to update the application deployment file for the production environment in the application CI/CD repository. Once the PipelineRun is merged, and thus the deployment file is updated, the production application is automatically updated.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/lardCvBrrn8?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;p&gt;You can start using &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.5/pipelines/understanding-openshift-pipelines.html"&gt;Tekton&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://argoproj.github.io/argo-cd/"&gt;Argo CD&lt;/a&gt; today. If you don&amp;#8217;t know where to begin, we have a few Katacoda scenarios that you can try:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://learn.openshift.com/middleware/pipelines/"&gt;OpenShift Pipelines&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://learn.openshift.com/introduction/gitops-introduction/"&gt;Introduction to GitOps&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://learn.openshift.com/introduction/gitops-multicluster/"&gt;Multi-Cluster GitOps&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you want to run the demo from this article in your own environment, you will find everything you need in &lt;a target="_blank" rel="nofollow" href="https://github.com/mvazquezc/code-to-prod-demo/tree/main/ocp"&gt;the demo repository&lt;/a&gt;. And if you already have experience with using Tekton, we encourage you to have a look at the &lt;a target="_blank" rel="nofollow" href="https://hub-preview.tekton.dev/"&gt;Tekton Hub&lt;/a&gt;. You can use the hub to contribute your tasks and pipelines so that the community can benefit from them.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#38;linkname=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#38;linkname=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#38;linkname=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#38;linkname=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#38;linkname=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#38;linkname=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#38;linkname=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F10%2Ffrom-code-to-production-with-openshift-pipelines-and-argo-cd%2F&amp;#038;title=From%20code%20to%20production%20with%20OpenShift%20Pipelines%20and%20Argo%20CD" data-a2a-url="https://developers.redhat.com/blog/2020/09/10/from-code-to-production-with-openshift-pipelines-and-argo-cd/" data-a2a-title="From code to production with OpenShift Pipelines and Argo CD"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/10/from-code-to-production-with-openshift-pipelines-and-argo-cd/"&gt;From code to production with OpenShift Pipelines and Argo CD&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/pi6DSYHP4R0" height="1" width="1" alt=""/&gt;</content><summary>Our team is responsible for a small GoLang application. The application’s developers are continuously sending code changes to the main branch, so for the past two years, our team has used GitOps for continuous integration (CI). We started out using GitOps to deploy applications to our test clusters; then, we began using it to run day two operations in our clusters. From there, we chose Argo CD as ...</summary><dc:creator>Mario Vázquez</dc:creator><dc:date>2020-09-10T07:00:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/10/from-code-to-production-with-openshift-pipelines-and-argo-cd/</feedburner:origLink></entry><entry><title>Financial Payments Architecture - An Introduction</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/dkDG_sxn-7w/financial-payments-architecture-an-introduction.html" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="Decision Manager" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="JBossAMQ" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-financial_payments_architecture_an_introduction</id><updated>2020-09-11T13:57:00Z</updated><published>2020-09-10T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-NhImz2b--gU/X1jsrXrG_jI/AAAAAAAAxeI/2I4wj4AD4YUcuxWk1-464UVs5OiejZFwQCNcBGAsYHQ/s1600/christiann-koepke-0jPuWm8_9wY-unsplash.jpg" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="1067" data-original-width="1600" height="213" src="https://1.bp.blogspot.com/-NhImz2b--gU/X1jsrXrG_jI/AAAAAAAAxeI/2I4wj4AD4YUcuxWk1-464UVs5OiejZFwQCNcBGAsYHQ/s320/christiann-koepke-0jPuWm8_9wY-unsplash.jpg" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 1 - An introduction&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Cloud technology is changing the way payment services architectured. In this series we will be presenting insight from our customers on adopting open source and cloud technology to modernize their payment service.&lt;br /&gt;&lt;br /&gt;So far we've presented research-based architectural blueprints of&amp;nbsp;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;omnichannel customer experience&lt;/a&gt;, &lt;a href="https://www.schabell.org/2020/01/integrating-saas-applications-an-introduction.html" target="_blank"&gt;integrating with SaaS applications&lt;/a&gt;, and &lt;a href="https://www.schabell.org/2020/05/cloud-native-development-a-blueprint.html" target="_blank"&gt;cloud-native development solutions&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;What's in an architectural blueprint and how are customers applying these solutions you ask? It's an interesting challenge in that we've been creating architectural content based on common customer adoption patterns. That's very different from most of the traditional marketing activities usually associated with generating content for the sole purpose of positioning products for solutions. When you're basing the content on actual execution in solution delivery, you're cutting out the&amp;nbsp;marketing&amp;nbsp;&lt;i&gt;chuff.&amp;nbsp;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;These&amp;nbsp;&lt;i&gt;architectural blueprints&lt;/i&gt;&amp;nbsp;are providing you with a way to implement a solution using open source technologies focusing on the integrations, structures, and interactions proven to work. What's not included are any vendor stories that you'll find in normal marketing content. Those stories that when it gets down to implementation crunch time, might not fully deliver on their promises.&lt;br /&gt;&lt;br /&gt;Let's look at the financial payments blueprint and explore their value in helping your solution designs.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt; The process&lt;/h3&gt;&lt;div&gt;The first step is to define what we are focusing on when talking about financial payments development. We've developed the following statement to guide our blueprint:&lt;i&gt;&lt;br /&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-c4nZbmo0URI/X1iJBrPLZjI/AAAAAAAAxd0/EF2zEn9cA8QU22HIpsuh7yznZ8pOQ0gJQCNcBGAsYHQ/s1600/def-fsi-payments-slide.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="540" data-original-width="960" height="180" src="https://1.bp.blogspot.com/-c4nZbmo0URI/X1iJBrPLZjI/AAAAAAAAxd0/EF2zEn9cA8QU22HIpsuh7yznZ8pOQ0gJQCNcBGAsYHQ/s320/def-fsi-payments-slide.png" title="" width="320" /&gt;&lt;/a&gt;&lt;i&gt;“Financial institutions enabling customers with fast, easy to use, and safe &lt;b&gt;payment&lt;/b&gt; services available anytime, anywhere... ”&lt;/i&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;This is the principle guiding our research into how organizations, both in the FSI world and outside, are looking at providing their customers with new financial payment experiences.&lt;i&gt;&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The approach is researching several existing customers with implemented solutions in this space, collecting their content, researching the internal implementation documentation, and where necessary reaching out to the field resources involved.&lt;br /&gt;&lt;br /&gt;The generic architectural blueprint is the final results and presents the reader with a higher level look at the elements used and their positioning in successful solutions. The idea of the generality of a blueprint is that you can determine the links to your own organization when applying the layout of a blueprint to your&amp;nbsp; own existing architectural choices. It's going to be a descriptive journey and not a prescriptive narrative as you might find in very specific reference architectures where component versions are tightly coupled in the solution.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;a href="https://1.bp.blogspot.com/-KYg1XHnXo8k/X1uCHJUMZ9I/AAAAAAAAxfc/Cu5J74Hvvb4VRZc9gM6QI2S_FX3zErxQACNcBGAsYHQ/s1600/financial-payments-ld.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="financial payments architecture" border="0" data-original-height="900" data-original-width="1600" height="180" src="https://1.bp.blogspot.com/-KYg1XHnXo8k/X1uCHJUMZ9I/AAAAAAAAxfc/Cu5J74Hvvb4VRZc9gM6QI2S_FX3zErxQACNcBGAsYHQ/s320/financial-payments-ld.png" title="" width="320" /&gt;&lt;/a&gt;We'll start by touring a logical diagram, providing an overview of the elements and groupings involved in the solution space. You'll find a diverse collection of open technologies in these architectures such as a container platform, process automation, decision management, microservices, data grids, open data hubs, API management, security, cloud-native storage and so much more.&lt;br /&gt;&lt;br /&gt;This follows on with specific schematic diagrams (physical) exploring use cases and example solutions architectures. While generic in nature, they should guide you in mapping these solutions to your existing financial architectures. Some of the diagramming examples focus on networked connections and others provide examples focused on data flows. Finally, detailed diagrams are presented for use in diving deeper into individual elements or groupings from the example use cases.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Project examples&lt;/h3&gt;&lt;div&gt;Sharing the process results for our financial payments blueprint is what this series is about, but there are project artifacts and diagrams that can also be shared with you, the reader. We've pulled together an&amp;nbsp;&lt;a href="https://gitlab.com/redhatdemocentral/portfolio-architecture-examples" target="_blank"&gt;examples repository&lt;/a&gt;&amp;nbsp;for all our architecture blueprint diagrams.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-TtPRQrvNJjY/X1iJqqAqHrI/AAAAAAAAxd8/uhdWwyjcYwkX8rEAqMVGzYK7x7S1Of3rgCNcBGAsYHQ/s1600/ld-overview-fsi-payments.png" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="financial payments architecture" border="1" data-original-height="225" data-original-width="350" height="205" src="https://1.bp.blogspot.com/-TtPRQrvNJjY/X1iJqqAqHrI/AAAAAAAAxd8/uhdWwyjcYwkX8rEAqMVGzYK7x7S1Of3rgCNcBGAsYHQ/s320/ld-overview-fsi-payments.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Figure 1 - logical diagrams in example repository.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;The&amp;nbsp;&lt;a href="https://gitlab.com/redhatdemocentral/portfolio-architecture-examples" target="_blank"&gt;Portfolio Architecture Examples&lt;/a&gt;&amp;nbsp;repository makes it possible to collect and share individual images from each diagram element as well as the entire project as a whole.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For example, if you scroll down to the file listings on the main page, you can locate a logical diagram as shown in figure 1.&lt;br /&gt;&lt;br /&gt;This is the collection for the logical diagrams associated with financial payments:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;in this case it's a single image you can click to view&lt;/li&gt;&lt;li&gt;a project file you can download to your local machine using the&amp;nbsp;&lt;i&gt;Download Diagram&lt;/i&gt;&amp;nbsp;link&lt;/li&gt;&lt;li&gt;a&amp;nbsp;&lt;i&gt;Load Diagram&lt;/i&gt;&amp;nbsp;link that you can click to automatically open the project diagrams in the diagram tooling used in this blueprint (use private or incognito browser mode to avoid caching issues and a smoother tooling experience)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;Give it a try and feel free to explore the collection of logical, schematic, detailed, solution, and community diagrams. This should allow you to get started much quicker than from scratch if you can kick-start a project with existing diagrams.&lt;br /&gt;&lt;br /&gt;Should you desire to start designing your own diagrams, please contribute the project file (ending in .drawio) by raising an issue with the file attached. We'd love to continue collecting these projects for others to use.&lt;br /&gt;&lt;br /&gt;Finally, there is a free online&amp;nbsp;&lt;a href="https://redhatdemocentral.gitlab.io/portfolio-architecture-workshops" target="_blank"&gt;beginners guide workshop&lt;/a&gt;&amp;nbsp;available focused on using diagram tooling, please explore to learn tips and tricks from the experts.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;An overview of the series on the financial payments portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/09/financial-payments-architecture-an-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Common architecture elements&lt;/li&gt;&lt;li&gt;Immediate payments example&lt;/li&gt;&lt;li&gt;Anti-money laundering example&lt;/li&gt;&lt;li&gt;Fraud detection example&lt;/li&gt;&lt;li&gt;Financial calculations example&lt;/li&gt;&lt;/ol&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, taking a look at the&amp;nbsp;generic&amp;nbsp;&lt;i&gt;common architecture elements&lt;/i&gt;&amp;nbsp;associated with cloud-native development and deployments.&lt;br /&gt;&lt;br /&gt;(Article co-authored by &lt;a href="https://www.linkedin.com/in/ramonv/?originalSubdomain=uk" target="_blank"&gt;Ramon Villarreal&lt;/a&gt;)&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Vc7ZgXvalI0:NvdAiQeC1cA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Vc7ZgXvalI0:NvdAiQeC1cA:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Vc7ZgXvalI0:NvdAiQeC1cA:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Vc7ZgXvalI0:NvdAiQeC1cA:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Vc7ZgXvalI0:NvdAiQeC1cA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Vc7ZgXvalI0:NvdAiQeC1cA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Vc7ZgXvalI0:NvdAiQeC1cA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Vc7ZgXvalI0:NvdAiQeC1cA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Vc7ZgXvalI0:NvdAiQeC1cA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Vc7ZgXvalI0:NvdAiQeC1cA:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Vc7ZgXvalI0:NvdAiQeC1cA:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/Vc7ZgXvalI0" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/dkDG_sxn-7w" height="1" width="1" alt=""/&gt;</content><summary>Part 1 - An introductionCloud technology is changing the way payment services architectured. In this series we will be presenting insight from our customers on adopting open source and cloud technology to modernize their payment service. So far we've presented research-based architectural blueprints of omnichannel customer experience, integrating with SaaS applications, and cloud-native developmen...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-09-10T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/Vc7ZgXvalI0/financial-payments-architecture-an-introduction.html</feedburner:origLink></entry><entry><title>How to run Red Hat CodeReady Containers on Windows 10 Enterprise</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PsdAJPewzmI/" /><category term="codeready" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Go" scheme="searchisko:content:tags" /><category term="internet connection sharing" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="windows" scheme="searchisko:content:tags" /><category term="windows 10" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-how_to_run_red_hat_codeready_containers_on_windows_10_enterprise</id><updated>2020-09-09T07:00:55Z</updated><published>2020-09-09T07:00:55Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-containers/overview"&gt;Red Hat CodeReady Containers&lt;/a&gt; allows you to spin up a small &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; cluster on your local PC, with the need for a server, a cloud, or a team of operations people. For developers who want to get started immediately with cloud-native development, &lt;a href="https://developers.redhat.com/topics/containers/"&gt;containers&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; (as well as OpenShift), it&amp;#8217;s a simple and slick tool. It runs on macOS, &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt;, and all versions of &lt;a href="https://developers.redhat.com/blog/category/windows/"&gt;Windows&lt;/a&gt; 10.&lt;/p&gt; &lt;p&gt;Except for Windows 10 Enterprise.&lt;/p&gt; &lt;p&gt;Which I painfully learned.&lt;/p&gt; &lt;p&gt;Because I lazily didn&amp;#8217;t pay attention to the documentation.&lt;/p&gt; &lt;p&gt;OK, so I&amp;#8217;m the only developer who glosses over documentation. Fortunately for you, I struggled and managed to get CRC running on my Windows 10 Enterprise notebook computer, and this article explains what is involved to get it working. So, in a sense, you&amp;#8217;re welcome that I&amp;#8217;m lazy.&lt;span id="more-722737"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;It&amp;#8217;s right there in front of you&lt;/h2&gt; &lt;p&gt;Turns out, the &lt;a href="https://developers.redhat.com/download-manager/link/3868678"&gt;CRC installation web page&lt;/a&gt; explicitly tells us which versions of Windows 10 are supported, and Windows 10 Enterprise (and Windows Server) is not explicitly mentioned as one of them (see Figure 1).&lt;/p&gt; &lt;div id="attachment_723587" style="width: 649px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-windows-versions-supported.png"&gt;&lt;img aria-describedby="caption-attachment-723587" class="wp-image-723587" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-windows-versions-supported.png" alt="screenshot of the supported Windows versions" width="639" height="75" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-windows-versions-supported.png 690w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-windows-versions-supported-300x35.png 300w" sizes="(max-width: 639px) 100vw, 639px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-723587" class="wp-caption-text"&gt;Figure 1: Do you see Windows 10 Enterprise or Server? I can&amp;#8217;t either.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;My thinking was that, if it supports Home and Pro, then obviously a much more &amp;#8220;enterprisey&amp;#8221; version like Windows 10 Enterprise would be supported. I mean, it must have all the bits of the lesser versions, plus a whole lot more, right?&lt;/p&gt; &lt;p&gt;Turns out, that&amp;#8217;s the underlying issue.&lt;/p&gt; &lt;h2&gt;Some history&lt;/h2&gt; &lt;p&gt;Windows 98 introduced Internet Connection Sharing (ICS) to Windows, making it easier for network users—for example—to use a shared dial-up modem (remember those?) That technology was replaced, and the replacement is what runs as a service in Windows 10—except for the enterprise version.&lt;/p&gt; &lt;p&gt;The enterprise version &lt;em&gt;also&lt;/em&gt; uses a completely-rewritten network connection stack, one that was built for servers (as opposed to workstations), but with one exception: Within the Hyper-V manager in Windows 10 Enterprise, as of this writing, the &lt;em&gt;Default Switch&lt;/em&gt; still uses the old ICS technology.&lt;/p&gt; &lt;h2&gt;CodeReady Container behavior&lt;/h2&gt; &lt;p&gt;CRC looks for and uses the Default Switch on your PC&amp;#8217;s Windows 10 machine, which means it works fine with Windows 10 Home and Professional. But when CRC attempts to use the Default Switch in Windows 10 Enterprise, it&amp;#8217;s using older (ICS) technology that isn&amp;#8217;t compatible.&lt;/p&gt; &lt;p&gt;So what do you do?&lt;/p&gt; &lt;h2&gt;Use the source, Luke&lt;/h2&gt; &lt;p&gt;Or Sarah, or whatever your name is. Here&amp;#8217;s the point: Because CRC is open source, you can examine the source code and see how the program uses the switch for DNS lookup. Lo and behold, right there in the &lt;a href="https://developers.redhat.com/blog/category/go/"&gt;Go&lt;/a&gt; source code, we can see that an alternative is supported as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_723607" style="width: 647px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-723607" class="wp-image-723607 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-windows-network-source-code.png" alt="screenshot of the Go code showing an alternate method" width="637" height="196" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-windows-network-source-code.png 637w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-windows-network-source-code-300x92.png 300w" sizes="(max-width: 637px) 100vw, 637px" /&gt;&lt;p id="caption-attachment-723607" class="wp-caption-text"&gt;Figure 2: The solution was right there.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;That&amp;#8217;s right. If we create a switch named &lt;code&gt;crc&lt;/code&gt;, it will be used instead of Default Switch.&lt;/p&gt; &lt;h2&gt;Hyper-excited about this&lt;/h2&gt; &lt;p&gt;From here it&amp;#8217;s simple. We open the Hyper-V manager and create a new External switch named &lt;code&gt;crc&lt;/code&gt;, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_723617" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-crc-network-switch-creation.png"&gt;&lt;img aria-describedby="caption-attachment-723617" class="wp-image-723617" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-crc-network-switch-creation.png" alt="screenshot of the virutal switch manager dialog" width="640" height="611" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-crc-network-switch-creation.png 718w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc-crc-network-switch-creation-300x286.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-723617" class="wp-caption-text"&gt;Figure 3: Creating the External switch.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Fire it up&lt;/h2&gt; &lt;p&gt;The only remaining step is to start CRC, as shown in Figure 4:&lt;/p&gt; &lt;pre&gt;$ crc start -p ~/Downloads/pull-secret.txt&lt;/pre&gt; &lt;div id="attachment_723627" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc_start_windows_10_enterprise.gif"&gt;&lt;img aria-describedby="caption-attachment-723627" class="wp-image-723627" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/crc_start_windows_10_enterprise.gif" alt="animation of the start process" width="640" height="367" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-723627" class="wp-caption-text"&gt;Figure 4: Look at that, it works!&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Once you have CRC up and running, get things really working by visiting the &lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/"&gt;Red Hat Marketplace&lt;/a&gt; and grab some awesome software to run. Most of them offer free trials; here&amp;#8217;s your chance to install, say, an eventing engine in OpenShift, and see how easy it is to use.&lt;/p&gt; &lt;p&gt;So there you have it. One small change and your Windows 10 Enterprise PC can run CodeReady Containers. While this setup is not officially supported, I&amp;#8217;ve had no issues with it. Let me know if it&amp;#8217;s the same for you in the comments.&lt;/p&gt; &lt;p&gt;From here, you might want to check out:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;&lt;a href="https://developers.redhat.com/blog/2020/09/09/install-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/"&gt;Install Red Hat OpenShift Operators on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;&lt;a href="https://developers.redhat.com/blog/2020/09/09/how-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/"&gt;How to install the CouchbaseDB Operator for Red Hat OpenShift on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#38;linkname=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#38;linkname=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#38;linkname=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#38;linkname=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#38;linkname=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#38;linkname=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#38;linkname=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-run-red-hat-codeready-containers-on-windows-10-enterprise%2F&amp;#038;title=How%20to%20run%20Red%20Hat%20CodeReady%20Containers%20on%20Windows%2010%20Enterprise" data-a2a-url="https://developers.redhat.com/blog/2020/09/09/how-to-run-red-hat-codeready-containers-on-windows-10-enterprise/" data-a2a-title="How to run Red Hat CodeReady Containers on Windows 10 Enterprise"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/09/how-to-run-red-hat-codeready-containers-on-windows-10-enterprise/"&gt;How to run Red Hat CodeReady Containers on Windows 10 Enterprise&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PsdAJPewzmI" height="1" width="1" alt=""/&gt;</content><summary>Red Hat CodeReady Containers allows you to spin up a small Red Hat OpenShift cluster on your local PC, with the need for a server, a cloud, or a team of operations people. For developers who want to get started immediately with cloud-native development, containers, and Kubernetes (as well as OpenShift), it’s a simple and slick tool. It runs on macOS, Linux, and all versions of Windows 10. Except f...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2020-09-09T07:00:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/09/how-to-run-red-hat-codeready-containers-on-windows-10-enterprise/</feedburner:origLink></entry><entry><title>Cloud-native Java applications made easy: Eclipse JKube 1.0.0 now available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/AB67-cbh9MA/" /><category term="build container image" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="fabric8" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Java 11" scheme="searchisko:content:tags" /><category term="Jkube" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Marc Nuri</name></author><id>searchisko:content:id:jbossorg_blog-cloud_native_java_applications_made_easy_eclipse_jkube_1_0_0_now_available</id><updated>2020-09-09T07:00:18Z</updated><published>2020-09-09T07:00:18Z</published><content type="html">&lt;p&gt;After nine months of &lt;a target="_blank" rel="nofollow" href="https://projects.eclipse.org/projects/ecd.jkube/governance"&gt;incubation with the Eclipse Foundation&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/jkube"&gt;Eclipse JKube&lt;/a&gt; 1.0.0 is finally here. This release marks the final deprecation of the great &lt;a target="_blank" rel="nofollow" href="https://github.com/fabric8io/fabric8-maven-plugin/"&gt;Fabric8 Maven Plugin&lt;/a&gt; (FMP) project. JKube is a complete replacement of FMP and includes all of the major features. Projects relying on FMP to create &lt;a target="_blank" rel="nofollow" href="https://maven.apache.org/"&gt;Apache Maven&lt;/a&gt; Java containers should &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/docs/migration-guide/"&gt;migrate to Eclipse JKube&lt;/a&gt; to take full advantage of the new features, bug fixes, and upstream project maintenance described in this article.&lt;/p&gt; &lt;p&gt;JKube is a collection of plugins plus a &lt;a target="_blank" rel="nofollow" href="https://search.maven.org/artifact/org.eclipse.jkube/jkube-kit-parent/1.0.0/pom"&gt;standalone Java library&lt;/a&gt; that fit into your Maven project. &lt;span style="font-weight: 400;"&gt;If you have a &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; project that needs to get deployed into &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; or &lt;a href="https://developers.redhat.com/openshift"&gt;Red Hat OpenShift&lt;/a&gt;, this is the right tool for you. JKube takes care of everything related to the cluster deployment while you, as a developer, get to concentrate on implementing your application without worrying about where it needs to be deployed.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-768247"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;How does Eclipse JKube work?&lt;/h2&gt; &lt;p&gt;JKube provides specific &lt;em&gt;goals&lt;/em&gt; and a set of developer tools for meeting them. Goals include &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#jkube:log"&gt;checking&lt;/a&gt; container logs, &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#jkube:watch"&gt;watching&lt;/a&gt; for project changes, and &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#jkube:debug"&gt;debugging&lt;/a&gt; your Java application in the cloud. Once these goals are configured, you can use JKube to build Java container images using a variety of build strategies, including Source-to-Image (S2I). Just add our &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin"&gt;kubernetes-maven-plugin&lt;/a&gt; or &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/docs/openshift-maven-plugin"&gt;openshift-maven-plugin&lt;/a&gt; dependency and then your application is ready to be built for and deployed into your Kubernetes or OpenShift cluster.&lt;/p&gt; &lt;p&gt;JKube infers its configuration from opinionated defaults that work for most Java applications. If this setup is not suitable for your project, you can always customize the plugin to suit your specific project requirements. The project also generates Kubernetes and OpenShift resource descriptors and configurations, and it provides the means to deploy them into your k8s-compatible cluster.&lt;/p&gt; &lt;h2&gt;What’s new?&lt;/h2&gt; &lt;p&gt;If you are coming to Eclipse JKube from the Fabric8 Maven Plugin, you&amp;#8217;ll be pleased to see these new features and updates in JKube 1.0.0 GA:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for the S2I build strategy for all of our generators.&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#_jib_java_image_builder"&gt;Support&lt;/a&gt; for a &lt;a target="_blank" rel="nofollow" href="https://github.com/GoogleContainerTools/jib"&gt;Jib&lt;/a&gt; (docker-less) build and push.&lt;/li&gt; &lt;li&gt;Separate plugins for Kubernetes and OpenShift, including specific resources and build strategies for OpenShift.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In addition, all base images are based on &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java 11&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Learn more about Eclipse JKube&lt;/h2&gt; &lt;p&gt;If you want to know more about Eclipse JKube, visit the project &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/"&gt;website&lt;/a&gt;, check our &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/jkube/tree/master/quickstarts/maven"&gt;quickstarts&lt;/a&gt;, and visit the &lt;a target="_blank" rel="nofollow" href="https://katacoda.com/jkubeio"&gt;Katacoda courses&lt;/a&gt;. You can also reach us on &lt;a target="_blank" rel="nofollow" href="https://gitter.im/eclipse/jkube"&gt;Gitter&lt;/a&gt;, and don’t forget to follow us on &lt;a target="_blank" rel="nofollow" href="https://twitter.com/jkubeio"&gt;Twitter&lt;/a&gt;!&lt;/p&gt; &lt;h2&gt;Praise to the original Fabric8 contributors&lt;/h2&gt; &lt;p&gt;Eclipse JKube&amp;#8217;s release is possible thanks to the &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/jkube/blob/master/REBRANDING.md"&gt;hard work&lt;/a&gt; and original code developed by the &lt;a target="_blank" rel="nofollow" href="https://github.com/fabric8io/fabric8-maven-plugin/graphs/contributors"&gt;Fabric8 Maven Plugin&lt;/a&gt; project team.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#38;linkname=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#38;linkname=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#38;linkname=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#38;linkname=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#38;linkname=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#38;linkname=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#38;linkname=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fcloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available%2F&amp;#038;title=Cloud-native%20Java%20applications%20made%20easy%3A%20Eclipse%20JKube%201.0.0%20now%20available" data-a2a-url="https://developers.redhat.com/blog/2020/09/09/cloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available/" data-a2a-title="Cloud-native Java applications made easy: Eclipse JKube 1.0.0 now available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/09/cloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available/"&gt;Cloud-native Java applications made easy: Eclipse JKube 1.0.0 now available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/AB67-cbh9MA" height="1" width="1" alt=""/&gt;</content><summary>After nine months of incubation with the Eclipse Foundation, Eclipse JKube 1.0.0 is finally here. This release marks the final deprecation of the great Fabric8 Maven Plugin (FMP) project. JKube is a complete replacement of FMP and includes all of the major features. Projects relying on FMP to create Apache Maven Java containers should migrate to Eclipse JKube to take full advantage of the new feat...</summary><dc:creator>Marc Nuri</dc:creator><dc:date>2020-09-09T07:00:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/09/cloud-native-java-applications-made-easy-eclipse-jkube-1-0-0-now-available/</feedburner:origLink></entry><entry><title>How to install the CouchbaseDB Operator for Red Hat OpenShift on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oiu2fW4Lpz0/" /><category term="codeready" scheme="searchisko:content:tags" /><category term="CodeReady Containers" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="couchbase" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><category term="Red Hat Marketplace" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-how_to_install_the_couchbasedb_operator_for_red_hat_openshift_on_your_laptop_using_red_hat_codeready_containers_and_red_hat_marketplace</id><updated>2020-09-09T07:00:09Z</updated><published>2020-09-09T07:00:09Z</published><content type="html">&lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/en-us"&gt;Red Hat Marketplace&lt;/a&gt; is an online store of sorts, where you can choose the software that you want to install and run on your &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift&lt;/a&gt; cluster. The analogy is a phone app store, where you select an app, and it&amp;#8217;s &lt;em&gt;automagically&lt;/em&gt; installed on your phone. With Marketplace, you simply register your cluster(s), select the software that you want, and it is installed for you. It could not be easier.&lt;/p&gt; &lt;p&gt;In this article, I show you how to install Couchbase Server Enterprise Edition on an OpenShift cluster. In my case, the cluster is running on Fedora 32 using Red Hat CodeReady Containers (CRC). Couchbase Server Enterprise Edition is currently available as a free trial, and CRC is also available at zero cost. This setup offers a no-risk way to try &lt;a href="https://developers.redhat.com/topics/containers"&gt;containers&lt;/a&gt;, &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt;, OpenShift, and, in this case, Couchbase. This is definitely &amp;#8220;developers playing around with the software&amp;#8221;-level stuff.&lt;/p&gt; &lt;p&gt;&lt;span id="more-771917"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Prerequisites&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ll start by assuming that you have CodeReady Containers installed on your machine. There&amp;#8217;s no charge for CRC, and it brings the latest version of OpenShift to a PC near you, so &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/try"&gt;go ahead and grab it&lt;/a&gt;. You can find installation instructions for &lt;a href="https://developers.redhat.com/blog/2020/09/09/how-to-run-red-hat-codeready-containers-on-windows-10-enterprise/"&gt;Windows 10 Enterprise here&lt;/a&gt; and &lt;a href="https://developers.redhat.com/openshift/local-openshift-macos"&gt;macOS here&lt;/a&gt;.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can get your free copy of CodeReady Containers at &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/try"&gt;try.openshift.com,&lt;/a&gt; where you can also tap into other free OpenShift learning materials.&lt;/p&gt; &lt;p&gt;Once your cluster is up and running, journey over to the &lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/en-us"&gt;Red Hat Marketplace website&lt;/a&gt;, where you will be asked to log in or create an account. If you don&amp;#8217;t have an account, you&amp;#8217;ll need to create one.&lt;/p&gt; &lt;p&gt;For full disclosure, you will need to register a credit card to install any software from Red Hat Marketplace, including the Couchbase free trial. However, the free trial will not&lt;em&gt;—&lt;/em&gt;repeat, &lt;em&gt;will not—&lt;/em&gt;automatically roll over into a paid subscription. You are never at risk of your credit card being automatically charged. Don&amp;#8217;t let the registration hold you back; there&amp;#8217;s too much goodness here in your favor.&lt;/p&gt; &lt;h2&gt;Step 1: Register with Red Hat Marketplace&lt;/h2&gt; &lt;p&gt;Assuming that you have an account, the first step is to go to the &lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com"&gt;Red Hat Marketplace homepage&lt;/a&gt;, shown in Figure 1, and sign in.&lt;/p&gt; &lt;div id="attachment_771947" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/08/rhm-website.png"&gt;&lt;img aria-describedby="caption-attachment-771947" class="wp-image-771947 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/rhm-website-1024x438.png" alt="The Red Hat Marketplace main page with options to log in or create an account.t" width="640" height="274" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/rhm-website-1024x438.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/rhm-website-300x128.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/rhm-website-768x329.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/rhm-website.png 1477w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-771947" class="wp-caption-text"&gt;Figure 1: Sign in to Red Hat Marketplace.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;After you&amp;#8217;ve logged in, click your username in the upper-right corner and select the &lt;strong&gt;My account&lt;/strong&gt; option from the drop-down list shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_775647" style="width: 278px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775647" class="wp-image-775647 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/my-account-menu.png" alt="The 'my account' option on Red Hat Marketplace." width="268" height="246" /&gt;&lt;p id="caption-attachment-775647" class="wp-caption-text"&gt;Figure 2: Select &amp;#8216;My account&amp;#8217;.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Step 2: Register your cluster&lt;/h2&gt; &lt;p&gt;Once you&amp;#8217;ve logged in to your account, you can access your workspace and register your OpenShift cluster. You only need to register a cluster once, and it&amp;#8217;s very easy. Figure 3 shows my profile page and account information; yours should look similar.&lt;/p&gt; &lt;div id="attachment_775657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775657" class="wp-image-775657" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/my-profile-page.png" alt="A screenshot of the Red Hat Marketplace 'My profile' page." width="640" height="254" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/my-profile-page.png 785w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/my-profile-page-300x119.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/my-profile-page-768x305.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775657" class="wp-caption-text"&gt;Figure 3: An example profile page for Red Hat Marketplace.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;When you click &lt;strong&gt;Workspace&lt;/strong&gt; at the top of your profile page, you&amp;#8217;ll see a list of the software that you have already installed. Before you can install any software in a new cluster, you need to register it. Registering a cluster installs the Red Hat Marketplace Operator, which talks to the Red Hat Marketplace website and installs the software that you need.&lt;/p&gt; &lt;p&gt;To start, click &lt;strong&gt;Add cluster&lt;/strong&gt;, as shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_775697" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775697" class="wp-image-775697" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-page.png" alt="The 'Add cluster' page." width="640" height="388" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-page.png 997w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-page-300x182.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-page-768x466.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775697" class="wp-caption-text"&gt;Figure 4: Click &amp;#8216;Add cluster&amp;#8217;.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The &lt;strong&gt;Add cluster&lt;/strong&gt; page guides you through the next steps.&lt;/p&gt; &lt;h3&gt;Generate your secret&lt;/h3&gt; &lt;p&gt;First, you will generate a pull secret, as shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_775707" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775707" class="wp-image-775707 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-prompt-1024x659.png" alt="A screenshot of the 'Add cluster' setup page." width="640" height="412" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-prompt-1024x659.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-prompt-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-prompt-768x494.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/add-cluster-prompt.png 1182w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775707" class="wp-caption-text"&gt;Figure 5: Generate your pull secret.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Install the Red Hat Marketplace Operator&lt;/h3&gt; &lt;p&gt;When you click &lt;strong&gt;Generate Secret&lt;/strong&gt;, the command to &lt;strong&gt;Install the Red Hat Marketplace Operator&lt;/strong&gt; (Step 2 in Figure 5) is updated to include your secret. Click the &lt;strong&gt;Copy&lt;/strong&gt; icon shown in Figure 6 to copy the command to your system&amp;#8217;s clipboard.&lt;/p&gt; &lt;div id="attachment_775717" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775717" class="wp-image-775717 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/generated-command-line-1024x163.png" alt="A screenshot of the 'Add cluster' page with the command-line command to install the Operator." width="640" height="102" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/generated-command-line-1024x163.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/generated-command-line-300x48.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/generated-command-line-768x122.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/generated-command-line.png 1167w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775717" class="wp-caption-text"&gt;Figure 6: Get the command and secret to install the Red Hat Marketplace Operator.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Register your cluster&lt;/h3&gt; &lt;p&gt;Now, paste the command into your command line and run it. After a few minutes, you will be able to return to the web interface to see your newly-registered cluster, as shown in Figure 7.&lt;/p&gt; &lt;div id="attachment_775727" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775727" class="wp-image-775727" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/new-cluster-is-shown.png" alt="The web site display of the new cluster." width="640" height="224" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/new-cluster-is-shown.png 848w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/new-cluster-is-shown-300x105.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/new-cluster-is-shown-768x269.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775727" class="wp-caption-text"&gt;Figure 7: Check the cluster registration.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You&amp;#8217;ll also receive an email when your cluster is registered—because no one ever gets enough email.&lt;/p&gt; &lt;h3&gt;Additional registration for CodeReady Containers&lt;/h3&gt; &lt;p&gt;If you are using CRC (and only if you&amp;#8217;re using CRC), you&amp;#8217;ll need to complete a few additional steps to ensure that your cluster has the credentials required to install software from Red Hat Marketplace. You will need to do this just once for your CRC cluster, and it takes about two minutes.&lt;/p&gt; &lt;p&gt;Head over to the marketplace documentation page and follow the instructions in &lt;em&gt;&lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/en-us/documentation/clusters#register-openshift-cluster-on-red-hat-codeready-containers"&gt;Register OpenShift cluster on Red Hat CodeReady Containers&lt;/a&gt;&lt;/em&gt;. It&amp;#8217;s nine easy steps and completely necessary for success with CRC. If you&amp;#8217;re not using CRC, you can skip this part.&lt;/p&gt; &lt;h2&gt;Step 3: Select your software&lt;/h2&gt; &lt;p&gt;Your cluster is up and running on your PC, and it&amp;#8217;s registered with Red Hat Marketplace. Now the fun part begins: Finding and installing a free software trial with a simple mouse click. As previously mentioned, I&amp;#8217;ve chosen Couchbase Server Enterprise Edition for this example.&lt;/p&gt; &lt;h3&gt;Search the Marketplace&lt;/h3&gt; &lt;p&gt;You can search or filter to see what software is available from Red Hat Marketplace. Figure 8 shows the search page with various product categories to select from.&lt;/p&gt; &lt;div id="attachment_771937" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-771937" class="wp-image-771937" src="https://developers.redhat.com/blog/wp-content/uploads/2020/08/filter-for-database.png" alt="A web page with options for filtering by type of software." width="640" height="350" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/08/filter-for-database.png 777w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/filter-for-database-300x164.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/08/filter-for-database-768x420.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-771937" class="wp-caption-text"&gt;Figure 8: The Red Hat Marketplace search page.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Filter by category&lt;/h3&gt; &lt;p&gt;We select the &lt;strong&gt;Database&lt;/strong&gt; category, which returns the options shown in Figure 9 (currently, there are 13 database options in total).&lt;/p&gt; &lt;div id="attachment_776587" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-776587" class="wp-image-776587 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.16.42-AM-1024x650.png" alt="All of the Database offerings on Red Hat Marketplace." width="640" height="406" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.16.42-AM-1024x650.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.16.42-AM-300x191.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.16.42-AM-768x488.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-776587" class="wp-caption-text"&gt;Figure 9: Database products available from Red Hat Marketplace.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Select your free trial&lt;/h3&gt; &lt;p&gt;Clicking on the Couchbase Server Enterprise Edition panel takes you to the Couchbase installation page shown in Figure 10.&lt;/p&gt; &lt;div id="attachment_776597" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-776597" class="wp-image-776597 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.42.06-AM-1024x659.png" alt="The Couchbase Server Enterprise Edition page with purchase and free trial options" width="640" height="412" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.42.06-AM-1024x659.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.42.06-AM-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2020-09-04-at-10.42.06-AM-768x495.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-776597" class="wp-caption-text"&gt;Figure 10: The Couchbase Server Enterprise Edition page with the free-trial option.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Click on the &lt;strong&gt;Free trial&lt;/strong&gt; button to continue, and you will see the screen in Figure 11.&lt;/p&gt; &lt;div id="attachment_775817" style="width: 307px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775817" class="wp-image-775817 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-start-trial.png" alt="The purchase summary shows no cost for the free trial." width="297" height="692" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-start-trial.png 297w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-start-trial-129x300.png 129w" sizes="(max-width: 297px) 100vw, 297px" /&gt;&lt;p id="caption-attachment-775817" class="wp-caption-text"&gt;Figure 11: Start the free trial.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Step 4: Set up and run the installation&lt;/h2&gt; &lt;p&gt;Now, you will select your cluster, choose the namespace (OpenShift project) where you wish to install Couchbase, and launch the installation. After you&amp;#8217;ve filled in this information, as shown in Figure 12, you may install the free trial in your cluster with one click.&lt;/p&gt; &lt;div id="attachment_775837" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775837" class="wp-image-775837 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-install-options-1024x641.png" alt="The web page with Couchbase installation options." width="640" height="401" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-install-options-1024x641.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-install-options-300x188.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-install-options-768x481.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-install-options.png 1145w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775837" class="wp-caption-text"&gt;Figure 12: Set up the installation.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 13 shows the installation in progress.&lt;/p&gt; &lt;div id="attachment_775847" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775847" class="wp-image-775847 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-is-installing-1024x96.png" alt="A web page showing Couchbase being installed from Red Hat Marketplace." width="640" height="60" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-is-installing-1024x96.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-is-installing-300x28.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-is-installing-768x72.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-is-installing.png 1197w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775847" class="wp-caption-text"&gt;Figure 13: The installation in progress on Red Hat Marketplace.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Confirm success!&lt;/h3&gt; &lt;p&gt;And now, here&amp;#8217;s the really cool thing: You can switch over to your OpenShift dashboard, select &lt;strong&gt;Installed Operators&lt;/strong&gt;, and watch the installation as it happens.&lt;/p&gt; &lt;div id="attachment_775857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775857" class="wp-image-775857" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-installing-dashboard.png" alt="OpenShift dashboard showing Couchbase being installed." width="640" height="86" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-installing-dashboard.png 913w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-installing-dashboard-300x40.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/couchbase-installing-dashboard-768x103.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775857" class="wp-caption-text"&gt;Figure 14: The installation in progress.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;On my PC, it took about two minutes for the status to switch from &lt;strong&gt;Installing&lt;/strong&gt; (Figure 14) to &lt;strong&gt;Succeeded&lt;/strong&gt; (Figure 15).&lt;/p&gt; &lt;div id="attachment_775877" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-775877" class="wp-image-775877 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/installed-operator-1024x411.png" alt="OpenShift dashboard showing Couchbase Operator installed." width="640" height="257" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/installed-operator-1024x411.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/installed-operator-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/installed-operator-768x308.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/installed-operator.png 1090w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-775877" class="wp-caption-text"&gt;Figure 15: The installation succeeded.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;That&amp;#8217;s it: With a simple registration and just a few clicks, you have installed the CouchbaseDB Operator in your cluster.  If you want to play around and experiment with Couchbase, visit the excellent &lt;a target="_blank" rel="nofollow" href="https://blog.couchbase.com/fully-configured-couchbase-on-red-hat-openshift-under-five-minutes/"&gt;Getting Started web page&lt;/a&gt; for this technology. Also, in case you are wondering, you can use the Red Hat Marketplace to uninstall the CouchbaseDB Operator at any time.&lt;/p&gt; &lt;p&gt;Want another example? You can find a more general one in &lt;em&gt;&lt;a href="https://developers.redhat.com/blog/2020/09/09/install-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/"&gt;Install Red Hat OpenShift Operators on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Fhow-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#038;title=How%20to%20install%20the%20CouchbaseDB%20Operator%20for%20Red%20Hat%20OpenShift%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" data-a2a-url="https://developers.redhat.com/blog/2020/09/09/how-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/" data-a2a-title="How to install the CouchbaseDB Operator for Red Hat OpenShift on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/09/how-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/"&gt;How to install the CouchbaseDB Operator for Red Hat OpenShift on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oiu2fW4Lpz0" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Marketplace is an online store of sorts, where you can choose the software that you want to install and run on your Red Hat OpenShift cluster. The analogy is a phone app store, where you select an app, and it’s automagically installed on your phone. With Marketplace, you simply register your cluster(s), select the software that you want, and it is installed for you. It could not be easier....</summary><dc:creator>Don Schenck</dc:creator><dc:date>2020-09-09T07:00:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/09/how-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/</feedburner:origLink></entry><entry><title>Install Red Hat OpenShift Operators on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MggQChALJik/" /><category term="CodeReady Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><category term="Mac" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><category term="Red Hat Marketplace" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="windows" scheme="searchisko:content:tags" /><author><name>rjose</name></author><id>searchisko:content:id:jbossorg_blog-install_red_hat_openshift_operators_on_your_laptop_using_red_hat_codeready_containers_and_red_hat_marketplace</id><updated>2020-09-09T07:00:08Z</updated><published>2020-09-09T07:00:08Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-containers/overview"&gt;Red Hat CodeReady Containers&lt;/a&gt; (CRC) is the quickest way for developers to get started with clusters on &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt; 4.1 or newer. CodeReady Containers is designed to run on a local computer. It simplifies setup and testing by emulating the cloud development environment locally with all of the tools that you need to develop &lt;a href="https://developers.redhat.com/topics/containers/"&gt;container&lt;/a&gt;-based applications.&lt;/p&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/"&gt;Red Hat Marketplace&lt;/a&gt; is an open cloud marketplace that makes it easy to discover and purchase the certified, containerized tools you need to build enterprise-first applications. It was created to help developers using OpenShift build applications and deploy them across a hybrid cloud. Red Hat Marketplace works on any developer workstation that is running CodeReady Containers.&lt;/p&gt; &lt;p&gt;This article guides you through the steps of setting up Red Hat Marketplace and installing containerized products in your local CodeReady Containers-based OpenShift clusters.&lt;/p&gt; &lt;p&gt;&lt;span id="more-741307"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Step 1: Install CodeReady Containers&lt;/h2&gt; &lt;p&gt;CodeReady Containers is delivered as a &lt;a href="https://developers.redhat.com/topics/linux"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL) virtual machine that supports native hypervisors for Linux, macOS, and &lt;a href="https://developers.redhat.com/blog/category/windows/"&gt;Windows&lt;/a&gt; 10. For this article, we will use CodeReady Containers version 1.15 with &lt;a href="https://developers.redhat.com/blog/2020/08/18/openshift-4-5-bringing-developers-joy-with-kubernetes-1-18-and-so-much-more/"&gt;OpenShift 4.5.7&lt;/a&gt; on macOS.&lt;/p&gt; &lt;p&gt;Installing CodeReady Containers requires you to log in with your Red Hat ID and download the CodeReady Containers archive along with the &lt;a target="_blank" rel="nofollow" href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned"&gt;pull secret&lt;/a&gt; file. Here are the complete installation instructions for:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;macOS in &lt;em&gt;&lt;a href="https://developers.redhat.com/openshift/local-openshift-macos"&gt;Local OpenShift development environment on macOS&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;Windows 10 Enterprise in &lt;a href="https://developers.redhat.com/blog/2020/09/09/how-to-run-red-hat-codeready-containers-on-windows-10-enterprise/"&gt;&lt;em&gt;How to run Red Hat CodeReady Containers on Windows 10 Enterprise&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once CodeReady Containers is installed, you should see something like this output, indicating that the command &lt;code&gt;crc setup&lt;/code&gt; completed successfully:&lt;/p&gt; &lt;pre&gt;INFO Checking if oc binary is cached INFO Caching oc binary INFO Checking if podman remote binary is cached INFO Checking if goodhosts binary is cached INFO Checking if CRC bundle is cached in '$HOME/.crc' INFO Unpacking bundle from the CRC binary INFO Checking minimum RAM requirements INFO Checking if running as non-root INFO Checking if HyperKit is installed INFO Checking if crc-driver-hyperkit is installed INFO Installing crc-machine-hyperkit INFO Will use root access: change ownership of /Users/rojan/.crc/bin/crc-driver-hyperkit Password: INFO Will use root access: set suid for /Users/rojan/.crc/bin/crc-driver-hyperkit INFO Checking file permissions for /etc/hosts INFO Checking file permissions for /etc/resolver/testing Setup is complete, you can now run 'crc start' to start the OpenShift cluster Started the OpenShift cluster WARN The cluster might report a degraded or error state. This is expected since several operators have been disabled to lower the resource usage. For more information, please consult the documentation &lt;/pre&gt; &lt;h2&gt;Step 2: Start CodeReady Containers&lt;/h2&gt; &lt;p&gt;After you have completed the setup, start CodeReady Containers by running the command &lt;code&gt;crc start&lt;/code&gt; or &lt;code&gt;crc start -p pull-secret.txt&lt;/code&gt;. Ensure that your virtual private network (VPN) sessions are turned off. Leaving the VPN on can result in an improper start. Below is my output from the &lt;code&gt;crc start&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ crc start -p ./pull-secret.txt INFO Checking if oc binary is cached INFO Checking if podman remote binary is cached INFO Checking if goodhosts binary is cached INFO Checking minimum RAM requirements INFO Checking if running as non-root INFO Checking if HyperKit is installed INFO Checking if crc-driver-hyperkit is installed INFO Checking file permissions for /etc/hosts INFO Checking file permissions for /etc/resolver/testing INFO Extracting bundle: crc_hyperkit_4.5.7.crcbundle ... crc.qcow2: 9.68 GiB / 9.68 GiB [-------------------------------------------------------------------------------------------------------------------------------------------------------------------] 100.00% INFO Checking size of the disk image /Users/rojan/.crc/cache/crc_hyperkit_4.5.7/crc.qcow2 ... INFO Creating CodeReady Containers VM for OpenShift 4.5.7... INFO CodeReady Containers VM is running INFO Generating new SSH Key pair ... INFO Copying kubeconfig file to instance dir ... INFO Starting network time synchronization in CodeReady Containers VM INFO Verifying validity of the cluster certificates ... INFO Network restart not needed INFO Check internal and public DNS query ... INFO Check DNS query from host ... INFO Starting OpenShift kubelet service INFO Configuring cluster for first start INFO Adding user's pull secret ... INFO Updating cluster ID ... INFO Starting OpenShift cluster ... [waiting 3m] INFO Updating kubeconfig INFO INFO To access the cluster, first set up your environment by following 'crc oc-env' instructions INFO Then you can access it by running 'oc login -u developer -p developer https://api.crc.testing:6443' INFO To login as an admin, run 'oc login -u kubeadmin -p ILWgF-VfgcQ-p6mJ4-Jztez https://api.crc.testing:6443' INFO INFO You can now run 'crc console' and use these credentials to access the OpenShift web console Started the OpenShift cluster WARN The cluster might report a degraded or error state. This is expected since several operators have been disabled to lower the resource usage. For more information, please consult the documentation &lt;/pre&gt; &lt;p&gt;Before you continue, save the login credentials for later use, or you can run the command &lt;code&gt;crc console --credentials&lt;/code&gt; to retrieve them later.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: The output shows that the cluster started in a degraded state. See the CodeReady Containers documents for a summary of the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.11/html/getting_started_guide/introducing-codeready-containers_gsg#about-codeready-containers_gsg"&gt;difference between CodeReady Containers and a production OpenShift cluster&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Now, run the command below to ensure that you have set up the correct &lt;code&gt;oc&lt;/code&gt; in the path:&lt;/p&gt; &lt;pre&gt;$ eval $ (crc oc-env) &lt;/pre&gt; &lt;p&gt;Verify that the cluster is running by entering the command &lt;code&gt;crc console&lt;/code&gt; to open the cluster console. Log in as admin using the credentials from the &lt;code&gt;crc start&lt;/code&gt; command. You will see the dialog shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_775127" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/09/crc-admin-console.png"&gt;&lt;img aria-describedby="caption-attachment-775127" class="wp-image-775127 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/crc-admin-console-1024x627.png" alt="A screenshot of the admin view of the cluster console." width="640" height="392" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/crc-admin-console-1024x627.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/crc-admin-console-300x184.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/crc-admin-console-768x470.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-775127" class="wp-caption-text"&gt;Figure 1: The Administrator&amp;#8217;s view of the OpenShift cluster console.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Step 3: Install the Marketplace prerequisites&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/articles/use-marketplace-add-cockroachdb-operator-openshift/"&gt;This article&lt;/a&gt; describes the process of setting up a Red Hat Marketplace account and a pull secret. Note that you will need the OpenShift command-line interface (CLI) and the &lt;a target="_blank" rel="nofollow" href="https://stedolan.github.io/jq/download/"&gt;jq command-line JSON processor&lt;/a&gt; plug-ins to run the Marketplace installation script. The OpenShift CLI comes with your CodeReady Containers installation.&lt;/p&gt; &lt;h2&gt;Step 4: Add a CodeReady Containers cluster&lt;/h2&gt; &lt;p&gt;Log in as admin from the command window using the credentials from the &lt;code&gt;crc start&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ oc login -u kubeadmin -p 8rynV-SeYLc-h8Ij7-YPYcz https://api.crc.testing:6443 Login successful. You have access to 57 projects, the list has been suppressed. You can list all projects with 'oc projects' Using project "default". &lt;/pre&gt; &lt;p&gt;In the Marketplace portal, select &lt;b&gt;Workspace &amp;#62; Clusters&lt;/b&gt; and click &lt;b&gt;Add cluster&lt;/b&gt;, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_776217" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f51a64a4e027.png"&gt;&lt;img aria-describedby="caption-attachment-776217" class="wp-image-776217 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f51a64a4e027-1024x650.png" alt="The Add cluster screen." width="640" height="406" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f51a64a4e027-1024x650.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f51a64a4e027-300x191.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f51a64a4e027-768x488.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-776217" class="wp-caption-text"&gt;Figure 2: Select &amp;#8216;Add Cluster&amp;#8217;.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Generate a pull secret (or use one that was previously generated). Copy and run the installation script at the command window to  install the Marketplace Operator into your CodeReady Container:&lt;/p&gt; &lt;pre&gt;$ curl -sL https://marketplace.redhat.com/provisioning/v1/scripts/install-operator | bash -s -- -i 5eb98eb8995d3a00148c38b5 -p &amp;#60;pull_secret&amp;#62; -a Automatic &lt;/pre&gt; &lt;p&gt;Note:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;code&gt;pull-secret&lt;/code&gt; is automatically set as the parameter for the install script if the secret is generated in step 1. Set the &lt;code&gt;pull-secret&lt;/code&gt; explicitly, if it was created earlier.&lt;/li&gt; &lt;li&gt;Enter a name for your cluster when prompted. By default, a random string is generated as the name for the cluster.&lt;/li&gt; &lt;li&gt;The source code for the Marketplace Operator is available at &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-marketplace/redhat-marketplace-operator"&gt;https://github.com/redhat-marketplace/redhat-marketplace-operator&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The following output indicates that you have successfully installed the Red Hat Marketplace Operator:&lt;/p&gt; &lt;pre&gt;================================================================================== [INFO] Installing Red Hat Marketplace Operator... ================================================================================== &amp;#62; Cluster Name: 1CF169E2-CA2D-40A4-94EE-99C65C8FBE0B Edit cluster name for easy reference in Red Hat Marketplace? [Y/n] y Enter Cluster Name: devadv-mac-crc Detected the following options: &amp;#62; Account Id: 5e616369cea4170013e06453 &amp;#62; Cluster Name: rhm-mac-crc-45 &amp;#62; Pull Secret: eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJQk0gTWFya2V0cGxhY2UiLCJpYXQiOjE1OTg0NDU5NjQsImp0aSI6ImFhM2Q1YmRkYzNlNzRkYThhMGNjYWY4YzM3OWEzYWQyIn0.9Jgw35E4oWfHO5aa6BqZfjFeehEaeGAeQgg-DtpI_yo &amp;#62; Marketplace Operator Approval Strategy: Automatic Continue with installation? [Y/n]: Continue with installation? [Y/n]: y STEP 1/5: Validating Namespace Installing Red Hat Marketplace Operator STEP 2/5: Installing the Red Hat Marketplace Operator. This might take several minutes namespace/openshift-redhat-marketplace created operatorgroup.operators.coreos.com/redhat-marketplace-operator created secret/rhm-operator-secret created subscription.operators.coreos.com/redhat-marketplace-operator created Checking for Cluster Service Version Checking for Custom Resource Definition STEP 3/5: Creating Red Hat Marketplace Operator Config custom resource marketplaceconfig.marketplace.redhat.com/marketplaceconfig created STEP 4/5: Checking for Razee resources to be created pod/rhm-watch-keeper-5ddb67c5d7-26fzp condition met All Razee resources created successfully. STEP 5/5: Applying global pull secret W0908 11:28:44.716669 74930 helpers.go:549] --dry-run=true is deprecated (boolean value) and can be replaced with --dry-run=client. W0908 11:28:44.924940 74933 helpers.go:549] --dry-run=true is deprecated (boolean value) and can be replaced with --dry-run=client. secret/pull-secret data updated Applying global pull secret succeeded Install complete, all resource created. ================================================================================== Red Hat Marketplace Operator successfully installed. It may take a few minutes for your cluster to show up in the Marketplace console so you can install purchased software or trials. Would you like to go back to the Red Hat Marketplace now? [Y/n] n &lt;/pre&gt; &lt;p&gt;Verify Marketplace Operator installed succeeded in the CRC console and pods are running as shown below.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f57a4e6d5797.png"&gt;&lt;img class="alignnone size-full wp-image-778627 " src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f57a4e6d5797.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f57a4e6d5797.png 2036w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f57a4e6d5797-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f57a4e6d5797-768x414.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/img_5f57a4e6d5797-1024x552.png 1024w" sizes="(max-width: 2036px) 100vw, 2036px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;$ oc get pods -n openshift-redhat-marketplace NAME READY STATUS RESTARTS AGE prometheus-operator-8447b8b887-pm4nm 2/2 Running 0 10m redhat-marketplace-operator-f7ff67bcd-mdjwq 1/1 Running 0 11m rhm-metric-state-65fff5c5f8-9ttdk 3/3 Running 0 10m rhm-remoteresources3-controller-5cc6b4945b-lqb6b 1/1 Running 0 10m rhm-watch-keeper-5ddb67c5d7-26fzp 1/1 Running 2 10m &lt;/pre&gt; &lt;h2&gt;Step 5: Configure the pull secret&lt;/h2&gt; &lt;p&gt;A few additional steps are required to make the cluster-global pull secret work in CodeReady Containers:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Run &lt;code&gt;oc get secret pull-secret -n openshift-config --output="jsonpath={.data.\.dockerconfigjson}" | base64 --decode&lt;/code&gt; and copy the output.&lt;/li&gt; &lt;li&gt;Get the node name by running &lt;code&gt;oc get node&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Debug the node using &lt;code&gt;oc debug node/&amp;#60;nodename&amp;#62;&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;When the debug pod comes up, run &lt;code&gt;chroot /host&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Replace the content in &lt;code&gt;/var/lib/kubelet/config.json&lt;/code&gt; with the output that you copied earlier from the &lt;code&gt;oc get secret ..&lt;/code&gt; command.&lt;/li&gt; &lt;li&gt;Enter &lt;code&gt;exit&lt;/code&gt; to exit the debug pod.&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;crc stop&lt;/code&gt; and then &lt;code&gt;crc start&lt;/code&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Here&amp;#8217;s the output for these steps:&lt;/p&gt; &lt;pre&gt;$ oc get node NAME STATUS ROLES AGE VERSION crc-m27h4-master-0 Ready master,worker 9d v1.17.1 $ oc debug node/crc-m27h4-master-0 Starting pod/crc-m27h4-master-0-debug ... To use host binaries, run `chroot /host` Pod IP: 192.168.126.11 If you don't see a command prompt, try pressing enter. sh-4.2# chroot /host sh-4.4# vi /var/lib/kubelet/config.json sh-4.4# sh-4.4# exit exit sh-4.2# exit exit Removing debug pod ... &lt;/pre&gt; &lt;p&gt;This completes the cluster setup in the Marketplace. Marketplace products are ready to install after the cluster comes up.&lt;/p&gt; &lt;h2&gt;Step 6: Install an OpenShift Operator&lt;/h2&gt; &lt;p&gt;The Red Hat Marketplace offers a wide variety of products across 12 categories. As an example, let&amp;#8217;s say that you want to try out &lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/en-us/products/cortex-certifai"&gt;Cortex Certifai&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Create a project and name it &lt;code&gt;cortex-certifai-test&lt;/code&gt; in your CodeReady Containers cluster.&lt;/p&gt; &lt;p&gt;Go to the &lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/en-us"&gt;Marketplace catalog&lt;/a&gt; and search for &lt;b&gt;Cortex Certifai&lt;/b&gt;. Select the correct tile and click on &lt;code&gt;Free trial&lt;/code&gt; to start your 30-day trial, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_741487" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5549daeed8.png"&gt;&lt;img aria-describedby="caption-attachment-741487" class="wp-image-741487 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5549daeed8-1024x470.png" alt="A screenshot of the Red Hat Marketplace product page for Cortex Certifai." width="640" height="294" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5549daeed8-1024x470.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5549daeed8-300x138.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5549daeed8-768x352.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5549daeed8.png 1574w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-741487" class="wp-caption-text"&gt;Figure 3: Click &amp;#8216;Free trial&amp;#8217; for a 30-day trial.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Go to &lt;b&gt;Workspace &amp;#62; My Software&lt;/b&gt; and click the &lt;b&gt;Install Operator&lt;/b&gt; icon, which is shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_741497" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef554ed06d6d.png"&gt;&lt;img aria-describedby="caption-attachment-741497" class="wp-image-741497" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef554ed06d6d.png" alt="A screenshot of Cortex Certifai tile with the 'Install Operator' button." width="640" height="596" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef554ed06d6d.png 638w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef554ed06d6d-300x279.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-741497" class="wp-caption-text"&gt;Figure 4: Install the OpenShift Operator for your free trial.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Select the CodeReady Containers cluster from the list of target clusters, then pick the namespace scope where you want to install the Operator, as shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_741507" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555749be9e.png"&gt;&lt;img aria-describedby="caption-attachment-741507" class="wp-image-741507 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555749be9e-1024x673.png" alt="A screenshot of the 'Target clusters' page in CodeReady Containers." width="640" height="421" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555749be9e-1024x673.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555749be9e-300x197.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555749be9e-768x505.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-741507" class="wp-caption-text"&gt;Figure 5: Select the namespace scope for your cluster installation.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Log in to the cluster to verify that the Operator installed successfully, as shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_741517" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555947c05a.png"&gt;&lt;img aria-describedby="caption-attachment-741517" class="wp-image-741517 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555947c05a-1024x418.png" alt="A screenshot showing the Cortex Certifai Operator is installed." width="640" height="261" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555947c05a-1024x418.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555947c05a-300x123.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef555947c05a-768x314.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-741517" class="wp-caption-text"&gt;Figure 6: Check the cluster&amp;#8217;s &amp;#8216;Installed Operators&amp;#8217; page to ensure your Operator is installed.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now, proceed to the &lt;b&gt;Cortex Certifai Operator&lt;/b&gt; tab to install operands or instances of the Cortex Certifai Operator. You can install OpenShift Operators directly from the cluster. Red Hat Marketplace Operators become available in the OperatorHub after you install the Marketplace Operator. To install a product directly from CodeReady Containers, log in to the cluster, go to &lt;b&gt;Operators &amp;#62; OperatorHub&lt;/b&gt;, search, and install. Figure 7 shows the dialog to install Cortex Certifai.&lt;/p&gt; &lt;div id="attachment_741537" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5562da088d.png"&gt;&lt;img aria-describedby="caption-attachment-741537" class="wp-image-741537 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5562da088d-1024x605.png" alt="A screenshot showing the option to install an instance of Cortex Certifai." width="640" height="378" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5562da088d-1024x605.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5562da088d-300x177.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef5562da088d-768x454.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-741537" class="wp-caption-text"&gt;Figure 7: Install a product instance or operand.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Note that &lt;b&gt;Marketplace&lt;/b&gt; should appear as a filter parameter under &lt;b&gt;Product type&lt;/b&gt; in the OpertorHub&amp;#8217;s search options.&lt;/p&gt; &lt;h2&gt;Step 6: Uninstall an Operator&lt;/h2&gt; &lt;p&gt;Uninstall the Cortex Certifai Operator by selecting &lt;b&gt;Uninstall Operator&lt;/b&gt; from the drop-down list shown in Figure 8. The Operator for the cluster will be automatically de-listed from the Marketplace Operators page.&lt;/p&gt; &lt;div id="attachment_741547" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef556752e12e.png"&gt;&lt;img aria-describedby="caption-attachment-741547" class="wp-image-741547 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef556752e12e-1024x503.png" alt="A screenshot of the drop-down list showing options to edit or uninstall an installed Operator." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef556752e12e-1024x503.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef556752e12e-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/img_5ef556752e12e-768x377.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-741547" class="wp-caption-text"&gt;Figure 8: Select the &amp;#8216;Uninstall Operator&amp;#8217; option.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Installing Red Hat Marketplace on CodeReady Containers gives you the flexibility to try and test Marketplace products on your CRC workstation early in the application development lifecycle. As a developer, you can quickly evaluate certified software on your local development environment prior to recommending its use to your team. Download &lt;a href="https://developers.redhat.com/products/codeready-containers/overview"&gt;CodeReady Containers&lt;/a&gt; and create your &lt;a target="_blank" rel="nofollow" href="https://marketplace.redhat.com/"&gt;Red Marketplace&lt;/a&gt; account to get started!&lt;/p&gt; &lt;p&gt;You can find a more specific example in &lt;em&gt;&lt;a href="https://developers.redhat.com/blog/2020/09/09/how-to-install-the-couchbasedb-operator-for-red-hat-openshift-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/"&gt;How to install the CouchbaseDB Operator for Red Hat OpenShift on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#38;linkname=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F09%2F09%2Finstall-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace%2F&amp;#038;title=Install%20Red%20Hat%20OpenShift%20Operators%20on%20your%20laptop%20using%20Red%20Hat%20CodeReady%20Containers%20and%20Red%20Hat%20Marketplace" data-a2a-url="https://developers.redhat.com/blog/2020/09/09/install-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/" data-a2a-title="Install Red Hat OpenShift Operators on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/09/09/install-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/"&gt;Install Red Hat OpenShift Operators on your laptop using Red Hat CodeReady Containers and Red Hat Marketplace&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MggQChALJik" height="1" width="1" alt=""/&gt;</content><summary>Red Hat CodeReady Containers (CRC) is the quickest way for developers to get started with clusters on Red Hat OpenShift 4.1 or newer. CodeReady Containers is designed to run on a local computer. It simplifies setup and testing by emulating the cloud development environment locally with all of the tools that you need to develop container-based applications. Red Hat Marketplace is an open cloud mark...</summary><dc:creator>rjose</dc:creator><dc:date>2020-09-09T07:00:08Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/09/09/install-red-hat-openshift-operators-on-your-laptop-using-red-hat-codeready-containers-and-red-hat-marketplace/</feedburner:origLink></entry><entry><title>Infinispan 12.0.0.Dev03</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/NBABaGCZ3ZA/" /><category term="Development" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Katia Aresti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_12_0_0_dev03</id><updated>2020-09-09T12:41:15Z</updated><published>2020-09-08T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Dear Infinispan community,&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Infinispan 12 development release 03 is here!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_cross_site_replication"&gt;&lt;a class="anchor" href="#_cross_site_replication" /&gt;Cross Site Replication&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With the new asynchronous cross-site replication algorithm introduced in Infinispan 11, this release brings a long desired feature: &lt;strong&gt;conflict resolution&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It is possible to configure a merge policy where, in case of conflict between updates of different sites, the value can be merged. Some predefined merge policies can be found &lt;a href="https://docs.jboss.org/infinispan/12.0/apidocs/org/infinispan/xsite/spi/XSiteMergePolicy.html"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;See the docs for more &lt;a href="https://infinispan.org/docs/dev/titles/xsite/xsite.html#conflict_resolution-xsite"&gt;information about conflict resolution&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;div class="title"&gt;Performance improvement&lt;/div&gt; &lt;p&gt;Another small improvement has been made to cross-site replication in this release. When sites get requests targeting caches that don’t exist or aren’t started, sender sites stop retrying the requests, which takes the backup location offline. Administrators must then bring the sites back online and perform state transfer to sync possible out-of-date data.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_infinispan_server"&gt;&lt;a class="anchor" href="#_infinispan_server" /&gt;Infinispan Server&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This version includes a new version of the web console, including mainly fixes, but also the ability to filter between Strong and Weak counters and to remove counters from the list.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="//infinispan.org/blog/img/ispnDev03console1.png"&gt;&lt;img src="//infinispan.org/blog/img/ispnDev03console1.png" alt="Console Counters Filter" width="550" height="400" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="//infinispan.org/blog/img/ispnDev03console2.png"&gt;&lt;img src="//infinispan.org/blog/img/ispnDev03console2.png" alt="Console Counters Remove Button" width="550" height="400" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="//infinispan.org/blog/img/ispnDev03console3.png"&gt;&lt;img src="//infinispan.org/blog/img/ispnDev03console3.png" alt="Console Counters Remove Modal" width="550" height="400" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can look at the &lt;a href="https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12347011"&gt;release notes&lt;/a&gt; to see what has changed.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_documentation"&gt;&lt;a class="anchor" href="#_documentation" /&gt;Documentation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://infinispan.org/docs/dev/index.html"&gt;Our documentation has been updated&lt;/a&gt; with some additional content as well as improvements for clarity and technical accuracy, notably: * Infinispan Operator Guide * Server Guide * Guide to Cross-Site Replication * Security Guide&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As always, the Infinispan team hope you find the documentation useful and complete. We’d love to hear from you and really value feedback from our community. If you think something is missing from the docs or spot a correction, please get in touch and we’ll get on it straight away.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_release_notes"&gt;&lt;a class="anchor" href="#_release_notes" /&gt;Release notes&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can look at the &lt;a href="https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12347011"&gt;release notes&lt;/a&gt; to see what has changed.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us" /&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’re hard at work on new features, improvements and fixes, so watch this space for more announcements!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please &lt;a href="https://infinispan.org/download/"&gt;download&lt;/a&gt;, &lt;a href="https://issues.redhat.com/projects/ISPN"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/NBABaGCZ3ZA" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan community, Infinispan 12 development release 03 is here! Cross Site Replication With the new asynchronous cross-site replication algorithm introduced in Infinispan 11, this release brings a long desired feature: conflict resolution. It is possible to configure a merge policy where, in case of conflict between updates of different sites, the value can be merged. Some predefined merg...</summary><dc:creator>Katia Aresti</dc:creator><dc:date>2020-09-08T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2020/09/08/infinispan-12/</feedburner:origLink></entry></feed>
